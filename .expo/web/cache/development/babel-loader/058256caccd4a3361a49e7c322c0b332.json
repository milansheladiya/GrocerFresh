{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport WeeklyDealProduct from \"../components/WeeklyDealProduct\";\nimport { dairy } from \"../Data/data\";\nimport { frozenFood } from \"../Data/data\";\nimport { ReadByQuelryHandler } from \"../Firebase/read\";\nimport { getFirestore, collection, query, where } from \"firebase/firestore\";\n\nvar WeeklyDealScreen = function WeeklyDealScreen() {\n  var db = getFirestore();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      fruits = _useState2[0],\n      setFruits = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bakery = _useState4[0],\n      setBakery = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      frozen = _useState6[0],\n      setFrozen = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      meat = _useState8[0],\n      setMeat = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      vegetables = _useState10[0],\n      setVegetables = _useState10[1];\n\n  useEffect(function _callee() {\n    var q, _fruits;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            q = query(collection(db, \"grocery\", \"Fruits\", \"Fruits\"), where(\"hasOffer\", \"==\", true));\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ReadByQuelryHandler(q));\n\n          case 3:\n            _fruits = _context.sent;\n            setFruits(_fruits);\n            fruits.forEach(function (doc) {\n              console.log(doc.id, \" => \", doc.data());\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: require(\"../../assets/GrocerFreshLogo.jpeg\"),\n    style: styles.img\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 30,\n      marginBottom: 10\n    }\n  }, \" Weekly Fresh Deals \"), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, \" Deal in Dairy \"), React.createElement(FlatList, {\n    data: fruits,\n    horizontal: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(item) {\n      return React.createElement(WeeklyDealProduct, {\n        item: item\n      });\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, \" Deal in frozen Food \"), React.createElement(FlatList, {\n    data: frozenFood,\n    horizontal: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(item) {\n      return React.createElement(WeeklyDealProduct, {\n        item: item\n      });\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  img: {\n    width: 200,\n    height: 150\n  }\n});\nexport default WeeklyDealScreen;","map":{"version":3,"sources":["/Users/milansheladiya/College Doc/Sem 3/react-native/Project/GrocerFresh/src/screens/WeeklyDealScreen.js"],"names":["React","useState","useEffect","WeeklyDealProduct","dairy","frozenFood","ReadByQuelryHandler","getFirestore","collection","query","where","WeeklyDealScreen","db","fruits","setFruits","bakery","setBakery","frozen","setFrozen","meat","setMeat","vegetables","setVegetables","q","_fruits","forEach","doc","console","log","id","data","styles","container","require","img","fontWeight","fontSize","marginBottom","item","StyleSheet","create","backgroundColor","alignItems","height","width"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport { View, Text, StyleSheet, Image, ImageBackground, FlatList,ScrollView } from \"react-native\";\nimport WeeklyDealProduct from \"../components/WeeklyDealProduct\";\nimport {dairy} from '../Data/data';\nimport {frozenFood} from '../Data/data';\nimport {ReadByQuelryHandler} from '../Firebase/read';\nimport { getFirestore,collection,query, where } from \"firebase/firestore\";\n\nconst WeeklyDealScreen = () => {\n    //console.log(dairy);\n    const db = getFirestore();\n    const [fruits,setFruits] = useState({});\n    const [bakery,setBakery] = useState({});\n    //const [dairy,setDairy] = useState({});\n    const [frozen,setFrozen] = useState({});\n    const [meat,setMeat] = useState({});\n    const [vegetables,setVegetables] = useState({});\n\n    useEffect(async () => {\n      const q = query(collection(db, \"grocery\",\"Fruits\",\"Fruits\"), where(\"hasOffer\", \"==\", true));\n      const _fruits = await ReadByQuelryHandler(q);\n      setFruits(_fruits);\n      fruits.forEach((doc) => {\n        console.log(doc.id, \" => \", doc.data());\n      });\n    },[]);\n  return (\n    <View style={styles.container}>\n\n      <Image\n        source={require(\"../../assets/GrocerFreshLogo.jpeg\")}\n        style={styles.img}\n      />\n\n      <Text style={{fontWeight:'bold', fontSize:30, marginBottom:10}}> Weekly Fresh Deals </Text>\n\n<Text style={{fontWeight:'bold'}}> Deal in Dairy </Text>\n        <FlatList \n        data={fruits}\n        horizontal\n        keyExtractor={(item) => item.id}\n        renderItem={(item) => <WeeklyDealProduct item={item}/>}\n        />\n\n\n<Text style={{fontWeight:'bold'}}> Deal in frozen Food </Text>\n        <FlatList \n        data={frozenFood}\n        horizontal\n        keyExtractor={(item) => item.id}\n        renderItem={(item) => <WeeklyDealProduct item={item}/>}\n        />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    //flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  img: {\n    width: 200,\n    height: 150,\n    \n  },\n});\n\nexport default WeeklyDealScreen;\n"]},"metadata":{},"sourceType":"module"}