{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { app } from \"./config\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, doc, addDoc, setDoc, Timestamp, query, where } from \"firebase/firestore\";\nvar db = getFirestore();\nexport var insertHandler = function insertHandler(arr, obj) {\n  var docRef;\n  return _regeneratorRuntime.async(function insertHandler$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          docRef = null;\n\n          if (!(arr.length === 1)) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0]), obj));\n\n        case 5:\n          _readOnlyError(\"docRef\");\n\n          _context.next = 24;\n          break;\n\n        case 8:\n          if (!(arr.length === 2)) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1]), obj));\n\n        case 11:\n          _readOnlyError(\"docRef\");\n\n          _context.next = 24;\n          break;\n\n        case 14:\n          if (!(arr.length === 3)) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1], arr[2]), obj));\n\n        case 17:\n          _readOnlyError(\"docRef\");\n\n          _context.next = 24;\n          break;\n\n        case 20:\n          if (!(arr.length === 4)) {\n            _context.next = 24;\n            break;\n          }\n\n          _context.next = 23;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1], arr[2], arr[3]), obj));\n\n        case 23:\n          _readOnlyError(\"docRef\");\n\n        case 24:\n          console.log(\"Document written with ID: \", docRef.id);\n          return _context.abrupt(\"return\", true);\n\n        case 28:\n          _context.prev = 28;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error adding document: \", _context.t0);\n          return _context.abrupt(\"return\", false);\n\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 28]], Promise);\n};","map":{"version":3,"sources":["/Users/milansheladiya/College Doc/Sem 3/react-native/Project/GrocerFresh/src/Firebase/insert.js"],"names":["app","getFirestore","collection","doc","addDoc","setDoc","Timestamp","query","where","db","insertHandler","arr","obj","docRef","length","console","log","id","error"],"mappings":";;AAAA,SAAQA,GAAR;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAAQC,UAAR,EAAmBC,GAAnB,EAAuBC,MAAvB,EAA8BC,MAA9B,EAAqCC,SAArC,EAA+CC,KAA/C,EAAsDC,KAAtD,QAAmE,oBAAnE;AAEA,IAAMC,EAAE,GAAGR,YAAY,EAAvB;AAIA,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,UAAAA,MAFe,GAEN,IAFM;;AAAA,gBAGlBF,GAAG,CAACG,MAAJ,KAAe,CAHG;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAKFV,MAAM,CAACF,UAAU,CAACO,EAAD,EAAKE,GAAG,CAAC,CAAD,CAAR,CAAX,EAAyBC,GAAzB,CALJ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,gBAObD,GAAG,CAACG,MAAJ,KAAe,CAPF;AAAA;AAAA;AAAA;;AAAA;AAAA,2CASFV,MAAM,CAACF,UAAU,CAACO,EAAD,EAAKE,GAAG,CAAC,CAAD,CAAR,EAAYA,GAAG,CAAC,CAAD,CAAf,CAAX,EAAgCC,GAAhC,CATJ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,gBAWbD,GAAG,CAACG,MAAJ,KAAe,CAXF;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAaFV,MAAM,CAACF,UAAU,CAACO,EAAD,EAAKE,GAAG,CAAC,CAAD,CAAR,EAAYA,GAAG,CAAC,CAAD,CAAf,EAAmBA,GAAG,CAAC,CAAD,CAAtB,CAAX,EAAuCC,GAAvC,CAbJ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,gBAebD,GAAG,CAACG,MAAJ,KAAe,CAfF;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAiBFV,MAAM,CAACF,UAAU,CAACO,EAAD,EAAKE,GAAG,CAAC,CAAD,CAAR,EAAYA,GAAG,CAAC,CAAD,CAAf,EAAmBA,GAAG,CAAC,CAAD,CAAtB,EAA0BA,GAAG,CAAC,CAAD,CAA7B,CAAX,EAA8CC,GAA9C,CAjBJ;;AAAA;AAAA;;AAAA;AAmBvBG,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CH,MAAM,CAACI,EAAjD;AAnBuB,2CAoBhB,IApBgB;;AAAA;AAAA;AAAA;AAsBvBF,UAAAA,OAAO,CAACG,KAAR,CAAc,yBAAd;AAtBuB,2CAuBhB,KAvBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["import {app} from './config';\nimport { getFirestore } from \"firebase/firestore\";\nimport {collection,doc,addDoc,setDoc,Timestamp,query, where } from \"firebase/firestore\";\n\nconst db = getFirestore();\n\n// ================================================== new data insertion =================================\n\nexport const insertHandler = async (arr,obj) => {\n    try {\n        const docRef = null;\n        if(arr.length === 1)\n        {\n            docRef = await addDoc(collection(db, arr[0]), obj);\n        }\n        else if(arr.length === 2)\n        {\n            docRef = await addDoc(collection(db, arr[0],arr[1]), obj);\n        }\n        else if(arr.length === 3)\n        {\n            docRef = await addDoc(collection(db, arr[0],arr[1],arr[2]), obj);\n        }\n        else if(arr.length === 4)\n        {\n            docRef = await addDoc(collection(db, arr[0],arr[1],arr[2],arr[3]), obj);\n        }\n      console.log(\"Document written with ID: \", docRef.id);\n      return true;\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n      return false;\n    }\n  };\n\n\n  //========================================== add in existing documents ====================\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}