{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { insertHandler } from \"../Firebase/insert\";\nimport { signUpHandler, isSignedInHandler } from \"../Firebase/auth\";\n\nvar SignupScreen = function SignupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      contact = _useState6[0],\n      setContact = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      postal = _useState10[0],\n      setPostal = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var signUpOperator = function signUpOperator() {\n    var data, isRes, uid, res;\n    return _regeneratorRuntime.async(function signUpOperator$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              \"name\": name,\n              \"email\": email,\n              \"contact\": contact,\n              \"address\": address,\n              \"postal\": postal.toUpperCase()\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signUpHandler(email, password));\n\n          case 3:\n            isRes = _context.sent;\n\n            if (!isRes) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(getUserIdHandler());\n\n          case 7:\n            uid = _context.sent;\n            console.log(uid, \"}}}}}}}}}\");\n            res = insertWithSetDocHandler([\"customers\", uid], data);\n            _context.next = 13;\n            break;\n\n          case 12:\n            console.log(\"something went wrong!\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var resetAllField = function resetAllField() {\n    setName('');\n    setEmail('');\n    setCosntact('');\n    setAddress('');\n    setPostal('');\n    setPassword('');\n  };\n\n  return React.createElement(View, {\n    style: {\n      marginTop: 50\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/GrocerFreshLogo.png\"),\n    style: styles.img\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      alignSelf: 'center',\n      color: '  ',\n      marginTop: 10\n    }\n  }, \" Sign Up \"), React.createElement(View, null, React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \"Name : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Enter the Name\",\n    value: name,\n    onChangeText: setName\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \"Email : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Enter the Email\",\n    autoComplete: \"email\",\n    value: email,\n    onChangeText: setEmail\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: (styles.txt, {\n      fontSize: 17\n    })\n  }, \"Contact No : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Contact Number\",\n    autoComplete: \"cc-number\",\n    value: contact,\n    onChangeText: setContact,\n    maxLength: 10\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \" Address : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Full Address\",\n    autoComplete: \"street-address\",\n    value: address,\n    onChangeText: setAddress\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: (styles.txt, {\n      fontSize: 17\n    })\n  }, \" Postal Code : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Postal Code\",\n    autoComplete: \"postal-code\",\n    value: postal,\n    onChangeText: setPostal,\n    maxLength: 6\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \" Password : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Password\",\n    autoComplete: \"password\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: setPassword\n  })), React.createElement(View, null, React.createElement(Button, {\n    title: \"SignUp\",\n    style: {\n      padding: 20\n    },\n    onPress: signUpOperator\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  img: {\n    width: 220,\n    height: 100,\n    alignSelf: 'center'\n  },\n  viewContain: {\n    flexDirection: 'row',\n    padding: 20\n  },\n  txt: {\n    flex: 1,\n    fontSize: 20\n  },\n  inputStyle: {\n    flex: 2,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingVertical: 5,\n    borderWidth: 1,\n    borderRadius: 30,\n    width: '50%',\n    fontSize: 20,\n    borderColor: '#dadae8'\n  }\n});\nexport default SignupScreen;","map":{"version":3,"sources":["/Users/milansheladiya/College Doc/Sem 3/react-native/Project/GrocerFresh/src/screens/SignupScreen.js"],"names":["React","useEffect","useState","insertHandler","signUpHandler","isSignedInHandler","SignupScreen","navigation","name","setName","email","setEmail","contact","setContact","address","setAddress","postal","setPostal","password","setPassword","signUpOperator","data","toUpperCase","isRes","getUserIdHandler","uid","console","log","res","insertWithSetDocHandler","resetAllField","setCosntact","marginTop","require","styles","img","fontSize","alignSelf","color","viewContain","txt","inputStyle","padding","StyleSheet","create","width","height","flexDirection","flex","paddingLeft","paddingRight","paddingVertical","borderWidth","borderRadius","borderColor"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport { View,Text, StyleSheet,Image,ScrollView,TextInput, Button } from \"react-native\";\nimport {insertHandler} from '../Firebase/insert';\nimport {signUpHandler,isSignedInHandler} from '../Firebase/auth';\n\n\nconst SignupScreen = ({navigation}) => {\n\n    const [name,setName] = useState('');\n    const [email,setEmail] = useState('');\n    const [contact,setContact] = useState('');\n    const [address,setAddress] = useState('');\n    const [postal,setPostal] = useState('');\n    const [password,setPassword] = useState('');\n\n    const signUpOperator = async () => {\n        const data = {\n            \"name\":name,\n            \"email\":email,\n            \"contact\":contact,\n            \"address\":address,\n            \"postal\":postal.toUpperCase(),\n        }\n\n        const isRes = await signUpHandler(email,password);        \n        if(isRes)\n        {\n            const uid = await getUserIdHandler();\nconsole.log(uid,\"}}}}}}}}}\");\n            const res = insertWithSetDocHandler([\"customers\",uid],data);\n        }\n        else{\n            console.log(\"something went wrong!\");\n        }\n        \n    }\n\n    const resetAllField = () => {\n        setName('');\n        setEmail('');\n        setCosntact('');\n        setAddress(''); \n        setPostal('');\n        setPassword('');\n    }\n\n    return(\n\n            <View style={{marginTop:50}}>\n                <Image source={require('../../assets/GrocerFreshLogo.png')} style={styles.img}/>\n                <Text style={{fontSize:20,alignSelf:'center',color:'  ',marginTop:10}}> Sign Up </Text>\n                <View>\n                    <View style={styles.viewContain}>\n                        <Text style={styles.txt}>Name : </Text>\n                        <TextInput style={styles.inputStyle} placeholder=\"Enter the Name\" value={name} onChangeText={setName}/>\n                    </View>\n                    <View style={styles.viewContain}>\n                        <Text style={styles.txt}>Email : </Text>\n                        <TextInput style={styles.inputStyle} placeholder=\"Enter the Email\" autoComplete='email' value={email} onChangeText={setEmail}/>\n                    </View>\n                    <View style={styles.viewContain}>\n                        <Text style={styles.txt,{fontSize:17}}>Contact No : </Text>\n                        <TextInput style={styles.inputStyle} placeholder=\"Contact Number\" autoComplete='cc-number' value={contact} onChangeText={setContact} maxLength={10}/>\n                    </View>\n                    <View style={styles.viewContain}>\n                        <Text style={styles.txt}> Address : </Text>\n                        <TextInput style={styles.inputStyle} placeholder=\"Full Address\" autoComplete='street-address' value={address} onChangeText={setAddress}/>\n                    </View> \n                    <View style={styles.viewContain}>\n                        <Text style={styles.txt,{fontSize:17}}> Postal Code : </Text>\n                        <TextInput style={styles.inputStyle} placeholder=\"Postal Code\" autoComplete='postal-code' value={postal} onChangeText={setPostal} maxLength={6}/>\n                    </View> \n                    <View style={styles.viewContain}>\n                        <Text style={styles.txt}> Password : </Text>\n                        <TextInput style={styles.inputStyle} placeholder=\"Password\" autoComplete='password' secureTextEntry={true} value={password} onChangeText={setPassword}/>\n                    </View> \n                    <View>\n                        <Button title=\"SignUp\" style={{padding:20}} onPress={signUpOperator}/>\n                    </View>\n                    \n                </View>\n\n            </View>\n\n\n    );\n\n}\n\nconst styles = StyleSheet.create({\n    img:{\n        width:220,\n        height:100,\n        alignSelf:'center',\n    },\n    viewContain:{\n        flexDirection:'row',padding:20       \n    },\n    txt:{\n        flex:1,fontSize:20,\n    },\n    inputStyle: {\n        flex:2,\n        paddingLeft: 15,\n        paddingRight: 15,\n        paddingVertical:5,\n        borderWidth: 1,\n        borderRadius: 30,\n        width:'50%',\n        fontSize:20,\n        borderColor: '#dadae8',\n      },\n});\n\nexport default SignupScreen;"]},"metadata":{},"sourceType":"module"}