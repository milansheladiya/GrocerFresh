{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { app } from \"./config\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, doc, addDoc, setDoc, Timestamp, query, where } from \"firebase/firestore\";\nvar db = getFirestore();\nexport var insertHandler = function insertHandler(arr, obj) {\n  var docRef, _docRef, _docRef2, _docRef3;\n\n  return _regeneratorRuntime.async(function insertHandler$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          if (!(arr.length === 1)) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0]), obj));\n\n        case 4:\n          docRef = _context.sent;\n          _context.next = 23;\n          break;\n\n        case 7:\n          if (!(arr.length === 2)) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1]), obj));\n\n        case 10:\n          _docRef = _context.sent;\n          _context.next = 23;\n          break;\n\n        case 13:\n          if (!(arr.length === 3)) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1], arr[2]), obj));\n\n        case 16:\n          _docRef2 = _context.sent;\n          _context.next = 23;\n          break;\n\n        case 19:\n          if (!(arr.length === 4)) {\n            _context.next = 23;\n            break;\n          }\n\n          _context.next = 22;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1], arr[2], arr[3]), obj));\n\n        case 22:\n          _docRef3 = _context.sent;\n\n        case 23:\n          return _context.abrupt(\"return\", true);\n\n        case 26:\n          _context.prev = 26;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error adding document: \", _context.t0);\n          return _context.abrupt(\"return\", false);\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 26]], Promise);\n};\nexport var insertWithSetDocHandler = function insertWithSetDocHandler(arr, obj) {\n  var docRef, _docRef4, _docRef5, _docRef6;\n\n  return _regeneratorRuntime.async(function insertWithSetDocHandler$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n\n          if (!(arr.length === 1)) {\n            _context2.next = 7;\n            break;\n          }\n\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, arr[0]), obj, {\n            merge: true\n          }));\n\n        case 4:\n          docRef = _context2.sent;\n          _context2.next = 23;\n          break;\n\n        case 7:\n          if (!(arr.length === 2)) {\n            _context2.next = 13;\n            break;\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, arr[0], arr[1]), obj, {\n            merge: true\n          }));\n\n        case 10:\n          _docRef4 = _context2.sent;\n          _context2.next = 23;\n          break;\n\n        case 13:\n          if (!(arr.length === 3)) {\n            _context2.next = 19;\n            break;\n          }\n\n          _context2.next = 16;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, arr[0], arr[1], arr[2]), obj, {\n            merge: true\n          }));\n\n        case 16:\n          _docRef5 = _context2.sent;\n          _context2.next = 23;\n          break;\n\n        case 19:\n          if (!(arr.length === 4)) {\n            _context2.next = 23;\n            break;\n          }\n\n          _context2.next = 22;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, arr[0], arr[1], arr[2], arr[3]), obj, {\n            merge: true\n          }));\n\n        case 22:\n          _docRef6 = _context2.sent;\n\n        case 23:\n          return _context2.abrupt(\"return\", true);\n\n        case 26:\n          _context2.prev = 26;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"Error adding document: \", _context2.t0);\n          return _context2.abrupt(\"return\", false);\n\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 26]], Promise);\n};","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/Firebase/insert.js"],"names":["app","getFirestore","collection","doc","addDoc","setDoc","Timestamp","query","where","db","insertHandler","arr","obj","length","docRef","console","error","insertWithSetDocHandler","merge"],"mappings":"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","sourcesContent":["import {app} from './config';\nimport { getFirestore } from \"firebase/firestore\";\nimport {collection,doc,addDoc,setDoc,Timestamp,query, where } from \"firebase/firestore\";\n\nconst db = getFirestore();\n\n// ================================================== new data insertion =================================\n\nexport const insertHandler = async (arr,obj) => {\n    try {\n        \n        if(arr.length === 1)\n        {\n            const docRef = await addDoc(collection(db, arr[0]), obj);\n        }\n        else if(arr.length === 2)\n        {\n            const docRef = await addDoc(collection(db, arr[0],arr[1]), obj);\n        }\n        else if(arr.length === 3)\n        {\n            const docRef = await addDoc(collection(db, arr[0],arr[1],arr[2]), obj);\n        }\n        else if(arr.length === 4)\n        {\n            const docRef = await addDoc(collection(db, arr[0],arr[1],arr[2],arr[3]), obj);\n        }\n      //console.log(\"Document written with ID: \", docRef);\n      return true;\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n      return false;\n    }\n  };\n\n\n  //========================================== add in existing documents ====================\n\n  export const insertWithSetDocHandler = async (arr,obj) => {\n    try {\n        \n        if(arr.length === 1)\n        {\n            const docRef = await setDoc(doc(db, arr[0]), obj,{ merge: true });\n        }\n        else if(arr.length === 2)\n        {\n            const docRef = await setDoc(doc(db, arr[0],arr[1]), obj,{ merge: true });\n        }\n        else if(arr.length === 3)\n        {\n            const docRef = await setDoc(doc(db, arr[0],arr[1],arr[2]), obj,{ merge: true });\n        }\n        else if(arr.length === 4)\n        {\n            const docRef = await setDoc(doc(db, arr[0],arr[1],arr[2],arr[3]), obj,{ merge: true });\n        }\n      //console.log(\"Document written with ID: \", docRef);\n      return true;\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n      return false;\n    }\n  };\n\n\n"]},"metadata":{},"sourceType":"module"}