{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { app } from \"./config\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nvar auth = getAuth();\nexport var signUpHandler = function signUpHandler(email, password) {\n  var user;\n  return _regeneratorRuntime.async(function signUpHandler$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(email, \"  === \", password);\n          user = null;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n            user = userCredential.user;\n            console.log(user.uid, \"^^^^^^^^\");\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n            return 0;\n          }));\n\n        case 4:\n          return _context.abrupt(\"return\", true);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signInHandler = function signInHandler(email, password) {\n  var res;\n  return _regeneratorRuntime.async(function signInHandler$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          res = false;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n            var user = userCredential.user;\n            console.log(\"Login With : \", user.email);\n            res = true;\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n          }));\n\n        case 3:\n          return _context2.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var isSignedInHandler = function isSignedInHandler() {\n  var res;\n  return _regeneratorRuntime.async(function isSignedInHandler$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          res = false;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(auth.onAuthStateChanged(function (user) {\n            if (user) {\n              console.log(\"done\");\n              res = true;\n            } else {\n              console.log(\"Not Done\");\n            }\n          }));\n\n        case 3:\n          return _context3.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signOutHandler = function signOutHandler() {\n  return _regeneratorRuntime.async(function signOutHandler$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(auth.signOut().then(function () {\n            console.log(\"Sign out completed!\");\n          }).catch(function (error) {\n            return console.log(error.message);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/milansheladiya/College Doc/Sem 3/react-native/Project/GrocerFresh/src/Firebase/auth.js"],"names":["app","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","auth","signUpHandler","email","password","console","log","user","then","userCredential","uid","catch","error","errorCode","code","errorMessage","message","signInHandler","res","isSignedInHandler","onAuthStateChanged","signOutHandler","signOut"],"mappings":"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","sourcesContent":["import {app} from './config';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nconst auth = getAuth();\n\n// ######################################################  Signup Function  ######################################################\nexport const signUpHandler =  async (email,password) => {\n    console.log(email,\"  === \" , password);\n    let user = null;\n    await createUserWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n    user = userCredential.user;\n      console.log(user.uid,\"^^^^^^^^\");\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      return 0;\n    });\n    return true;\n};\n\n\n// ###################################################### Login Functions  ######################################################\nexport const signInHandler = async(email,password) => {\n    let res = false;\n    await signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        console.log(\"Login With : \" , user.email);\n        res = true;\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode);\n        console.log(errorMessage);\n      });\n      return res;\n  };\n\n\n// ######################################################  If already Logged in  ######################################################\nexport const isSignedInHandler = async () => {\n    let res = false;\n    await auth.onAuthStateChanged(user => {\n        if(user) {\n            console.log(\"done\");\n            res = true;\n        }\n        else{\n            console.log(\"Not Done\");\n        }\n    })\n\n    return res;\n};\n\n\n// ######################################################  To do sign out  ######################################################\n\nexport const signOutHandler = async () => {\n    await auth.signOut().then(() => {\n        console.log(\"Sign out completed!\");\n    }).catch(error => console.log(error.message))\n}\n\n\n  "]},"metadata":{},"sourceType":"module"}