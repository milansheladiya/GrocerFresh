{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { signInHandler, isSignedInHandler } from \"../Firebase/auth\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var sinInOperator = function sinInOperator() {\n    var res;\n    return _regeneratorRuntime.async(function sinInOperator$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(signInHandler(email, password));\n\n          case 2:\n            res = _context.sent;\n            console.log(res, \"------ Login -----\");\n\n            if (res) {\n              navigation.navigate(\"HomeScreen\");\n            } else {\n              console.log(\"Wrong credentials \");\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: require(\"../../assets/GrocerFreshLogo.jpeg\"),\n    style: styles.img\n  }), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    placeholderTextColor: \"#003f5c\",\n    value: email,\n    onChangeText: setEmail,\n    style: styles.textInput\n  })), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    placeholderTextColor: \"#003f5c\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: setPassword,\n    style: styles.textInput\n  })), React.createElement(TouchableOpacity, null, React.createElement(Text, {\n    style: styles.forgotButton\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: sinInOperator\n  }, React.createElement(Text, {\n    style: styles.loginText\n  }, \"LOGIN\")), React.createElement(View, {\n    style: styles.signUpArea\n  }, React.createElement(Text, {\n    style: {\n      flex: 2\n    }\n  }, \"Don't have any account?\"), React.createElement(TouchableOpacity, {\n    style: {\n      flex: 1\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"SignupScreen\");\n    }\n  }, React.createElement(Text, {\n    style: styles.signUpText\n  }, \"SignUp\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  img: {\n    marginBottom: 10,\n    width: 200,\n    height: 200\n  },\n  inputView: {\n    backgroundColor: \"#D6E5FA\",\n    borderRadius: 20,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 10,\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#1597E5\"\n  },\n  textInput: {\n    height: 50,\n    padding: 10,\n    fontWeight: \"bold\"\n  },\n  forgotButton: {\n    height: 30,\n    marginBottom: 10\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 20,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#113CFC\"\n  },\n  loginText: {\n    color: \"#F5F5F5\",\n    fontWeight: \"bold\"\n  },\n  signUpArea: {\n    marginTop: 20,\n    flexDirection: 'row',\n    marginHorizontal: 60\n  },\n  signUpText: {\n    color: \"#113CFC\",\n    fontWeight: \"bold\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/milansheladiya/College Doc/Sem 3/react-native/Project/GrocerFresh/src/screens/LoginScreen.js"],"names":["React","useState","signInHandler","isSignedInHandler","LoginScreen","navigation","email","setEmail","password","setPassword","sinInOperator","res","console","log","navigate","styles","container","require","img","inputView","textInput","forgotButton","loginBtn","loginText","signUpArea","flex","signUpText","StyleSheet","create","backgroundColor","alignItems","height","marginBottom","width","borderRadius","borderWidth","borderColor","padding","fontWeight","justifyContent","marginTop","color","flexDirection","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  Alert\n} from \"react-native\";\nimport {signInHandler,isSignedInHandler} from '../Firebase/auth';\n\nconst LoginScreen = ({navigation}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n\n  const sinInOperator = async () => {\n      const res = await signInHandler(email,password);\n      //console.log(await isSignedInHandler());\n      console.log(res,\"------ Login -----\");\n      if(res)\n      {\n        navigation.navigate(\"HomeScreen\");\n      }\n      else\n      {\n        console.log(\"Wrong credentials \");\n      }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../../assets/GrocerFreshLogo.jpeg\")}\n        style={styles.img}\n      />\n\n      <View style={styles.inputView}>\n        <TextInput\n          placeholder=\"Email\"\n          placeholderTextColor=\"#003f5c\"\n          value={email}\n          onChangeText={setEmail}\n          style={styles.textInput}\n        />\n      </View>\n      <View style={styles.inputView}>\n        <TextInput\n          placeholder=\"Password\"\n          placeholderTextColor=\"#003f5c\"\n          secureTextEntry={true}\n          value={password}\n          onChangeText={setPassword}\n          style={styles.textInput}\n        />\n      </View>\n\n      <TouchableOpacity>\n        <Text style={styles.forgotButton}>Forgot Password?</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style={styles.loginBtn} onPress={sinInOperator}>\n        <Text style={styles.loginText}>LOGIN</Text>\n      </TouchableOpacity>\n\n      <View style={styles.signUpArea}>\n        <Text style={{flex:2}}>Don't have any account?</Text>\n        <TouchableOpacity style={{flex:1}} onPress={() => navigation.navigate(\"SignupScreen\")}>\n          <Text style={styles.signUpText}>SignUp</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    //flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  img: {\n    marginBottom: 10,\n    width: 200,\n    height: 200,\n  },\n\n  inputView: {\n    backgroundColor: \"#D6E5FA\",\n    borderRadius: 20,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 10,\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#1597E5\",\n  },\n\n  textInput: {\n    height: 50,\n    padding: 10,\n    fontWeight: \"bold\",\n  },\n\n  forgotButton: {\n    height: 30,\n    marginBottom: 10,\n  },\n\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 20,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#113CFC\",\n  },\n  loginText: {\n    color: \"#F5F5F5\",\n    fontWeight: \"bold\",\n  },\n  signUpArea: {\n    marginTop: 20,\n    flexDirection:'row',\n    marginHorizontal:60\n  },\n\n  signUpText: {\n    color: \"#113CFC\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}