{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { UpdateDocuments } from \"../../Firebase/update\";\nimport { insertHandler } from \"../../Firebase/insert\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nvar NewProductScreen = function NewProductScreen(props) {\n  var _useState = useState(props.navigation.getParam(\"item\") == null ? \"New\" : \"Modify\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      pageTitle = _useState2[0],\n      setPageTitle = _useState2[1];\n\n  var _useState3 = useState(props.navigation.getParam(\"item\") == null ? \"Add\" : \"Modify\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskButton = _useState4[0],\n      setTaskButton = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      quantity = _useState10[0],\n      setQuantity = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rating = _useState12[0],\n      setRating = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      typeOfProduct = _useState14[0],\n      setTypeOfProduct = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      url = _useState16[0],\n      setUrl = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      open = _useState18[0],\n      setOpen = _useState18[1];\n\n  var _useState19 = useState(props.navigation.getParam(\"item\") == null ? \"Fruits\" : props.navigation.getParam(\"item\").category),\n      _useState20 = _slicedToArray(_useState19, 2),\n      value = _useState20[0],\n      setValue = _useState20[1];\n\n  var _useState21 = useState([{\n    label: \"Fruits\",\n    value: \"Fruits\"\n  }, {\n    label: \"bakeryFood\",\n    value: \"bakeryFood\"\n  }, {\n    label: \"dairy\",\n    value: \"dairy\"\n  }, {\n    label: \"frozenFood\",\n    value: \"frozenFood\"\n  }, {\n    label: \"meat\",\n    value: \"meat\"\n  }, {\n    label: \"vegetables\",\n    value: \"vegetables\"\n  }]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      items = _useState22[0],\n      setItems = _useState22[1];\n\n  useEffect(function () {\n    if (pageTitle === \"Modify\") {\n      fillProductDataHandler();\n    }\n  }, []);\n\n  var fillProductDataHandler = function fillProductDataHandler() {\n    setName(props.navigation.getParam(\"item\").name);\n    setPrice(props.navigation.getParam(\"item\").price.toString());\n    setQuantity(props.navigation.getParam(\"item\").quantity.toString());\n    setRating(props.navigation.getParam(\"item\").ratings.toString());\n    setTypeOfProduct(props.navigation.getParam(\"item\").type);\n    setUrl(props.navigation.getParam(\"item\").url);\n  };\n\n  var taskHandler = function taskHandler() {\n    var res, category, NewData;\n    return _regeneratorRuntime.async(function taskHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(pageTitle === \"New\")) {\n              _context.next = 9;\n              break;\n            }\n\n            if (!validateHandler()) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(\"new\");\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(insertHandler([\"grocery\", value, value], collectHandler()));\n\n          case 5:\n            res = _context.sent;\n\n            if (res) {\n              Alert.alert(\"Product added successfully!\");\n              clearFieldHandler();\n            } else {\n              Alert.alert(\"Something went wrong!\");\n            }\n\n          case 7:\n            _context.next = 21;\n            break;\n\n          case 9:\n            category = props.navigation.getParam(\"item\").category;\n            NewData = {\n              description: props.navigation.getParam(\"item\").description,\n              hasOffer: props.navigation.getParam(\"item\").hasOffer,\n              isAddedToCart: props.navigation.getParam(\"item\").isAddedToCart,\n              isFavorite: props.navigation.getParam(\"item\").isFavorite,\n              name: name,\n              price: price,\n              quantity: quantity,\n              ratings: rating,\n              type: typeOfProduct,\n              url: url\n            };\n            props.navigation.getParam(\"item\").name = name;\n            props.navigation.getParam(\"item\").price = price;\n            props.navigation.getParam(\"item\").quantity = quantity;\n            props.navigation.getParam(\"item\").ratings = rating;\n            props.navigation.getParam(\"item\").type = typeOfProduct;\n            props.navigation.getParam(\"item\").url = url;\n            _context.next = 19;\n            return _regeneratorRuntime.awrap(UpdateDocuments([\"grocery\", category, category, props.navigation.getParam(\"item\").id], NewData));\n\n          case 19:\n            console.log(\"Update Done\");\n            props.navigation.goBack();\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var validateHandler = function validateHandler() {\n    if (name === null || name === \"\" || price === null || price === \"\" || quantity === null || quantity === \"\" || rating === null || rating === \"\" || typeOfProduct === null || typeOfProduct === \"\" || url === null || url === \"\") {\n      Alert.alert(\"All Field mush be filled!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  var collectHandler = function collectHandler() {\n    var NewData = {\n      description: \"Fresh item\",\n      hasOffer: false,\n      isAddedToCart: false,\n      isFavorite: false,\n      name: name,\n      price: price,\n      quantity: quantity,\n      ratings: rating,\n      type: typeOfProduct,\n      url: url\n    };\n    return NewData;\n  };\n\n  var clearFieldHandler = function clearFieldHandler() {\n    setName(\"\");\n    setPrice();\n    setQuantity();\n    setRating();\n    setTypeOfProduct(\"\");\n    setUrl(\"\");\n  };\n\n  return React.createElement(View, {\n    style: {\n      paddingTop: 40,\n      width: 100,\n      height: 100\n    }\n  }, React.createElement(View, {\n    style: styles.titleOuter\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"AdminHomeScreen\");\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-back\",\n    size: 30,\n    color: \"black\",\n    style: {\n      margin: 10,\n      padding: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.title\n  }, pageTitle, \" Product \")), React.createElement(View, null, React.createElement(View, {\n    style: styles.inputfieldOuter\n  }, React.createElement(Text, {\n    style: styles.inputfieldText\n  }, \" Name \"), React.createElement(TextInput, {\n    style: styles.inputfield,\n    placeholder: \"Product name\",\n    autoComplete: false,\n    autoCorrect: false,\n    value: name,\n    onChangeText: setName\n  })), React.createElement(View, {\n    style: styles.inputfieldOuter\n  }, React.createElement(Text, {\n    style: styles.inputfieldText\n  }, \" Price \"), React.createElement(TextInput, {\n    style: styles.inputfield,\n    placeholder: \"Product price$\",\n    keyboardType: \"numeric\",\n    autoComplete: false,\n    autoCorrect: false,\n    value: price,\n    onChangeText: setPrice\n  })), React.createElement(View, {\n    style: styles.inputfieldOuter\n  }, React.createElement(Text, {\n    style: styles.inputfieldText\n  }, \" Quantity \"), React.createElement(TextInput, {\n    style: styles.inputfield,\n    placeholder: \"Quantity\",\n    keyboardType: \"numeric\",\n    autoComplete: false,\n    autoCorrect: false,\n    value: quantity,\n    onChangeText: setQuantity\n  })), React.createElement(View, {\n    style: styles.inputfieldOuter\n  }, React.createElement(Text, {\n    style: styles.inputfieldText\n  }, \" Rating \"), React.createElement(TextInput, {\n    style: styles.inputfield,\n    placeholder: \"Rating\",\n    keyboardType: \"numeric\",\n    autoComplete: false,\n    autoCorrect: false,\n    value: rating,\n    onChangeText: setRating\n  })), React.createElement(View, {\n    style: styles.inputfieldOuter\n  }, React.createElement(Text, {\n    style: styles.inputfieldText\n  }, \" Type \"), React.createElement(TextInput, {\n    style: styles.inputfield,\n    placeholder: \"Type of Product\",\n    keyboardType: \"ascii-capable\",\n    autoComplete: false,\n    autoCorrect: false,\n    value: typeOfProduct,\n    onChangeText: setTypeOfProduct\n  })), React.createElement(View, {\n    style: styles.inputfieldOuter\n  }, React.createElement(Text, {\n    style: styles.inputfieldText\n  }, \" URL \"), React.createElement(TextInput, {\n    style: styles.inputfield,\n    placeholder: \"Image Url\",\n    keyboardType: \"ascii-capable\",\n    autoComplete: false,\n    autoCorrect: false,\n    value: url,\n    onChangeText: setUrl,\n    selectTextOnFocus: true\n  })), pageTitle == \"Modify\" ? null : React.createElement(View, {\n    style: styles.inputfieldOuter\n  }, React.createElement(Text, {\n    style: styles.inputfieldText\n  }, \" Category \"), React.createElement(DropDownPicker, {\n    open: open,\n    value: value,\n    items: items,\n    setOpen: setOpen,\n    setValue: setValue,\n    setItems: setItems,\n    style: styles.categoryMenu,\n    textStyle: styles.categoryText,\n    containerStyle: styles.cetegoryContainer\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.taskButton,\n    onPress: taskHandler\n  }, React.createElement(Text, {\n    style: styles.taskButtonText\n  }, \" \", taskButton, \" \")));\n};\n\nvar styles = StyleSheet.create({\n  titleOuter: {\n    backgroundColor: \"#EE6F57\",\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.7,\n    shadowRadius: 5,\n    marginBottom: 40,\n    flexDirection: \"row\"\n  },\n  title: {\n    textAlign: \"center\",\n    padding: 25,\n    fontSize: 20,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    color: \"#FAEEE7\"\n  },\n  inputfieldOuter: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    margin: 15\n  },\n  inputfieldText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#14274E\"\n  },\n  inputfield: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    borderBottomWidth: 2,\n    width: 250,\n    color: \"#790C5A\"\n  },\n  taskButton: {\n    width: 300,\n    alignSelf: \"center\",\n    borderRadius: 25,\n    backgroundColor: \"#206A5D\",\n    position: \"absolute\",\n    bottom: -300,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.7,\n    shadowRadius: 5,\n    marginBottom: 50\n  },\n  taskButtonText: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    textAlign: \"center\",\n    padding: 15,\n    color: \"white\"\n  },\n  categoryMenu: {\n    width: 240,\n    height: 40,\n    backgroundColor: \"#fafafa\"\n  },\n  categoryText: {\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  cetegoryContainer: {\n    width: 240,\n    marginLeft: 10,\n    backgroundColor: \"#dfdfdf\"\n  }\n});\nexport default NewProductScreen;","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/screens/Admin/NewProductScreen.js"],"names":["React","useEffect","useState","DropDownPicker","UpdateDocuments","insertHandler","Icon","useNavigation","ScrollView","NewProductScreen","props","navigation","getParam","pageTitle","setPageTitle","taskButton","setTaskButton","name","setName","price","setPrice","quantity","setQuantity","rating","setRating","typeOfProduct","setTypeOfProduct","url","setUrl","open","setOpen","category","value","setValue","label","items","setItems","fillProductDataHandler","toString","ratings","type","taskHandler","validateHandler","console","log","collectHandler","res","Alert","alert","clearFieldHandler","NewData","description","hasOffer","isAddedToCart","isFavorite","id","goBack","paddingTop","width","height","styles","titleOuter","navigate","margin","padding","title","inputfieldOuter","inputfieldText","inputfield","categoryMenu","categoryText","cetegoryContainer","taskButtonText","StyleSheet","create","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginBottom","flexDirection","textAlign","fontSize","fontStyle","fontWeight","color","justifyContent","borderBottomWidth","alignSelf","borderRadius","position","bottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  Alert,\n  Dimensions,\n} from \"react-native\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { UpdateDocuments } from \"../../Firebase/update\";\nimport { insertHandler } from \"../../Firebase/insert\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\n// Dropdown manu :  https://hossein-zare.github.io/react-native-dropdown-picker-website/docs/usage\n\nconst NewProductScreen = (props) => {\n  const [pageTitle, setPageTitle] = useState(\n    props.navigation.getParam(\"item\") == null ? \"New\" : \"Modify\"\n  );\n  const [taskButton, setTaskButton] = useState(\n    props.navigation.getParam(\"item\") == null ? \"Add\" : \"Modify\"\n  );\n\n  // textinput field\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState();\n  const [quantity, setQuantity] = useState();\n  const [rating, setRating] = useState();\n  const [typeOfProduct, setTypeOfProduct] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  // for dropdown menu\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\n    props.navigation.getParam(\"item\") == null\n      ? \"Fruits\"\n      : props.navigation.getParam(\"item\").category\n  );\n  const [items, setItems] = useState([\n    { label: \"Fruits\", value: \"Fruits\" },\n    { label: \"bakeryFood\", value: \"bakeryFood\" },\n    { label: \"dairy\", value: \"dairy\" },\n    { label: \"frozenFood\", value: \"frozenFood\" },\n    { label: \"meat\", value: \"meat\" },\n    { label: \"vegetables\", value: \"vegetables\" },\n  ]);\n\n  useEffect(() => {\n    if (pageTitle === \"Modify\") {\n      fillProductDataHandler();\n    }\n  }, []);\n\n  const fillProductDataHandler = () => {\n    setName(props.navigation.getParam(\"item\").name);\n    setPrice(props.navigation.getParam(\"item\").price.toString());\n    setQuantity(props.navigation.getParam(\"item\").quantity.toString());\n    setRating(props.navigation.getParam(\"item\").ratings.toString());\n    setTypeOfProduct(props.navigation.getParam(\"item\").type);\n    setUrl(props.navigation.getParam(\"item\").url);\n  };\n\n  const taskHandler = async () => {\n    if (pageTitle === \"New\") {\n      if (validateHandler()) {\n        console.log(\"new\");\n        const res = await insertHandler(\n          [\"grocery\", value, value],\n          collectHandler()\n        );\n        if (res) {\n          Alert.alert(\"Product added successfully!\");\n          clearFieldHandler();\n        } else {\n          Alert.alert(\"Something went wrong!\");\n        }\n      }\n    } else {\n      const category = props.navigation.getParam(\"item\").category;\n      const NewData = {\n        description: props.navigation.getParam(\"item\").description,\n        hasOffer: props.navigation.getParam(\"item\").hasOffer,\n        isAddedToCart: props.navigation.getParam(\"item\").isAddedToCart,\n        isFavorite: props.navigation.getParam(\"item\").isFavorite,\n        name: name,\n        price: price,\n        quantity: quantity,\n        ratings: rating,\n        type: typeOfProduct,\n        url: url,\n      };\n\n      props.navigation.getParam(\"item\").name = name;\n      props.navigation.getParam(\"item\").price = price;\n      props.navigation.getParam(\"item\").quantity = quantity;\n      props.navigation.getParam(\"item\").ratings = rating;\n      props.navigation.getParam(\"item\").type = typeOfProduct;\n      props.navigation.getParam(\"item\").url = url;\n\n      await UpdateDocuments(\n        [\"grocery\", category, category, props.navigation.getParam(\"item\").id],\n        NewData\n      );\n      console.log(\"Update Done\");\n      props.navigation.goBack();\n    }\n  };\n\n  const validateHandler = () => {\n    if (\n      name === null ||\n      name === \"\" ||\n      price === null ||\n      price === \"\" ||\n      quantity === null ||\n      quantity === \"\" ||\n      rating === null ||\n      rating === \"\" ||\n      typeOfProduct === null ||\n      typeOfProduct === \"\" ||\n      url === null ||\n      url === \"\"\n    ) {\n      Alert.alert(\"All Field mush be filled!\");\n      return false;\n    }\n    return true;\n  };\n\n  const collectHandler = () => {\n    const NewData = {\n      description: \"Fresh item\",\n      hasOffer: false,\n      isAddedToCart: false,\n      isFavorite: false,\n      name: name,\n      price: price,\n      quantity: quantity,\n      ratings: rating,\n      type: typeOfProduct,\n      url: url,\n    };\n    return NewData;\n  };\n\n  const clearFieldHandler = () => {\n    setName(\"\");\n    setPrice();\n    setQuantity();\n    setRating();\n    setTypeOfProduct(\"\");\n    setUrl(\"\");\n  };\n\n  return (\n    <View style={{ paddingTop: 40, width: 100, height: 100 }}>\n      <View style={styles.titleOuter}>\n        <TouchableOpacity\n          onPress={() => props.navigation.navigate(\"AdminHomeScreen\")}\n        >\n          <Icon\n            name=\"arrow-back\"\n            size={30}\n            color={\"black\"}\n            style={{ margin: 10, padding: 11 }}\n          />\n        </TouchableOpacity>\n        <Text style={styles.title}>{pageTitle} Product </Text>\n      </View>\n\n      <View>\n        <View style={styles.inputfieldOuter}>\n          <Text style={styles.inputfieldText}> Name </Text>\n          <TextInput\n            style={styles.inputfield}\n            placeholder=\"Product name\"\n            autoComplete={false}\n            autoCorrect={false}\n            value={name}\n            onChangeText={setName}\n          />\n        </View>\n        <View style={styles.inputfieldOuter}>\n          <Text style={styles.inputfieldText}> Price </Text>\n          <TextInput\n            style={styles.inputfield}\n            placeholder=\"Product price$\"\n            keyboardType=\"numeric\"\n            autoComplete={false}\n            autoCorrect={false}\n            value={price}\n            onChangeText={setPrice}\n          />\n        </View>\n        <View style={styles.inputfieldOuter}>\n          <Text style={styles.inputfieldText}> Quantity </Text>\n          <TextInput\n            style={styles.inputfield}\n            placeholder=\"Quantity\"\n            keyboardType=\"numeric\"\n            autoComplete={false}\n            autoCorrect={false}\n            value={quantity}\n            onChangeText={setQuantity}\n          />\n        </View>\n        <View style={styles.inputfieldOuter}>\n          <Text style={styles.inputfieldText}> Rating </Text>\n          <TextInput\n            style={styles.inputfield}\n            placeholder=\"Rating\"\n            keyboardType=\"numeric\"\n            autoComplete={false}\n            autoCorrect={false}\n            value={rating}\n            onChangeText={setRating}\n          />\n        </View>\n        <View style={styles.inputfieldOuter}>\n          <Text style={styles.inputfieldText}> Type </Text>\n          <TextInput\n            style={styles.inputfield}\n            placeholder=\"Type of Product\"\n            keyboardType=\"ascii-capable\"\n            autoComplete={false}\n            autoCorrect={false}\n            value={typeOfProduct}\n            onChangeText={setTypeOfProduct}\n          />\n        </View>\n        <View style={styles.inputfieldOuter}>\n          <Text style={styles.inputfieldText}> URL </Text>\n          <TextInput\n            style={styles.inputfield}\n            placeholder=\"Image Url\"\n            keyboardType=\"ascii-capable\"\n            autoComplete={false}\n            autoCorrect={false}\n            value={url}\n            onChangeText={setUrl}\n            selectTextOnFocus={true}\n          />\n        </View>\n        {pageTitle == \"Modify\" ? null : (\n          <View style={styles.inputfieldOuter}>\n            <Text style={styles.inputfieldText}> Category </Text>\n            <DropDownPicker\n              open={open}\n              value={value}\n              items={items}\n              setOpen={setOpen}\n              setValue={setValue}\n              setItems={setItems}\n              style={styles.categoryMenu}\n              textStyle={styles.categoryText}\n              containerStyle={styles.cetegoryContainer}\n            />\n          </View>\n        )}\n      </View>\n\n      <TouchableOpacity style={styles.taskButton} onPress={taskHandler}>\n        <Text style={styles.taskButtonText}> {taskButton} </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleOuter: {\n    backgroundColor: \"#EE6F57\",\n    // margin: 20,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.7,\n    shadowRadius: 5,\n    // borderRadius:20,\n    marginBottom: 40,\n    flexDirection: \"row\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: 25,\n    fontSize: 20,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    color: \"#FAEEE7\",\n  },\n  inputfieldOuter: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    margin: 15,\n  },\n  inputfieldText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#14274E\",\n  },\n  inputfield: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    borderBottomWidth: 2,\n    width: 250,\n    color: \"#790C5A\",\n  },\n  taskButton: {\n    //borderWidth:1,\n    width: 300,\n    alignSelf: \"center\",\n    borderRadius: 25,\n    backgroundColor: \"#206A5D\",\n    position: \"absolute\",\n    bottom: -300,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.7,\n    shadowRadius: 5,\n    marginBottom: 50,\n  },\n  taskButtonText: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    textAlign: \"center\",\n    padding: 15,\n    color: \"white\",\n  },\n  categoryMenu: {\n    width: 240,\n    height: 40,\n    backgroundColor: \"#fafafa\",\n\n    //   marginLeft:10,\n  },\n  categoryText: {\n    textAlign: \"center\",\n    fontSize: 20,\n  },\n  cetegoryContainer: {\n    width: 240,\n    marginLeft: 10,\n    backgroundColor: \"#dfdfdf\",\n  },\n});\n\nexport default NewProductScreen;\n"]},"metadata":{},"sourceType":"module"}