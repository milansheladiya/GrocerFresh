{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport CartProducts from \"../components/CartProducts\";\nimport { Fontisto } from \"@expo/vector-icons\";\nimport { Fruits } from \"../Data/data\";\nimport { insertWithSetDocHandler } from \"../Firebase/insert\";\nimport { getUserIdHandler } from \"../Firebase/auth\";\nimport { readAllWithId } from \"../Firebase/read\";\n\nvar CartScreen = function CartScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cartProdId = _useState2[0],\n      setcartProdId = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cartProd = _useState4[0],\n      setcartProd = _useState4[1];\n\n  var cartHandler = function cartHandler() {\n    var uid, carts, _loop, i;\n\n    return _regeneratorRuntime.async(function cartHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getUserIdHandler());\n\n          case 2:\n            uid = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(readAllWithId([\"customers\", uid]));\n\n          case 5:\n            carts = _context2.sent;\n            setcartProdId(_toConsumableArray(carts.data().cart));\n\n            _loop = function _loop(i) {\n              var res;\n              return _regeneratorRuntime.async(function _loop$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(readAllWithId([\"grocery\", cartProdId[i].category, cartProdId[i].category, cartProdId[i].id]));\n\n                    case 2:\n                      res = _context.sent;\n                      setcartProd(function (cartProd) {\n                        return [].concat(_toConsumableArray(cartProd), [_objectSpread(_objectSpread({}, res.data()), {}, {\n                          id: cartProdId[i].id,\n                          quantity: cartProdId[i].quantity\n                        })]);\n                      });\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            i = 0;\n\n          case 9:\n            if (!(i < cartProdId.length)) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(_loop(i));\n\n          case 12:\n            i++;\n            _context2.next = 9;\n            break;\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(cartHandler());\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Fontisto, {\n    name: \"opencart\",\n    size: 40,\n    color: \"blue\",\n    style: {\n      alignSelf: \"center\",\n      padding: 10\n    }\n  }), React.createElement(FlatList, {\n    data: cartProd,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(item) {\n      return React.createElement(CartProducts, {\n        item: item\n      });\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"CheckoutScreen\");\n    },\n    style: {\n      backgroundColor: '#548CFF',\n      position: 'absolute',\n      bottom: 10,\n      width: '100%',\n      height: 60,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'black',\n      fontSize: 20\n    }\n  }, \"Checkout : 100$\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1\n  },\n  text: {}\n});\nexport default CartScreen;","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/screens/CartScreen.js"],"names":["React","useEffect","useState","CartProducts","Fontisto","Fruits","insertWithSetDocHandler","getUserIdHandler","readAllWithId","CartScreen","navigation","cartProdId","setcartProdId","cartProd","setcartProd","cartHandler","uid","carts","data","cart","i","category","id","res","quantity","length","styles","container","alignSelf","padding","item","navigate","backgroundColor","position","bottom","width","height","justifyContent","alignItems","color","fontSize","StyleSheet","create","flex","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  Alert,\n  ScrollView,\n  Image,\n  TouchableOpacity,\n  FlatList\n} from \"react-native\";\nimport CartProducts from \"../components/CartProducts\";\nimport { Fontisto } from \"@expo/vector-icons\";\nimport {Fruits} from '../Data/data';\nimport {insertWithSetDocHandler} from \"../Firebase/insert\";\nimport {getUserIdHandler} from \"../Firebase/auth\";\nimport {readAllWithId} from \"../Firebase/read\";\n\nconst CartScreen = ({navigation}) => {\n// const db = getFirestore();\n\n  // const addData = async ()  => {\n  //   const uid = await getUserIdHandler();\n  //   console.log(uid);\n  //   const res = await insertWithSetDocHandler([\"customers\",uid],{\n  //     cart:[{id:\"FgYvsRuUvT5ZNvVGCoCU\",category:\"Fruits\",quantity:1},{id:\"LZKCPfoFwiA4OFMiDfA3\",category:\"Fruits\",quantity:1},{id:\"5K6bDGLBCpqVBWd6jG0v\",category:\"bakeryFood\",quantity:1}],\n  //   });\n  //   console.log(res , \" -------- Cart ------ \");\n  // }\n\n  const [cartProdId,setcartProdId] = useState([]);\n  const [cartProd,setcartProd] = useState([]);\n\n  const cartHandler = async () => {\n    const uid = await getUserIdHandler();\n    const carts = await readAllWithId([\"customers\",uid]);\n  \n    setcartProdId([...carts.data().cart]);\n    // console.log(cartProd);\n\n    for (let i = 0; i < cartProdId.length; i++) {\n      //console.log(cartProdId[i].id);\n      \n      let res = await readAllWithId([\"grocery\",cartProdId[i].category,cartProdId[i].category,cartProdId[i].id]);    \n        // console.log(res.data());\n        setcartProd(cartProd => [...cartProd,{...res.data(),id:cartProdId[i].id,quantity:cartProdId[i].quantity}]);\n    }\n      //console.log(cartProd);\n  }\n\n  useEffect(async () => {\n    await cartHandler();\n  },[]);\n\n  return (\n    <View style={styles.container}>\n      <Fontisto\n        name=\"opencart\"\n        size={40}\n        color=\"blue\"\n        style={{ alignSelf: \"center\", padding: 10 }}\n      />\n\n\n        <FlatList\n        data={cartProd}\n        keyExtractor={(item) => item.id}\n        renderItem={(item) => <CartProducts item={item}/>}\n        />\n\n{/*         \n        <CartProducts />\n        <CartProducts />\n        <CartProducts /> */}\n\n\n\n{/* () => navigation.navigate(\"CheckoutScreen\") */}\n          <TouchableOpacity onPress={() => navigation.navigate(\"CheckoutScreen\")} style={{backgroundColor:'#548CFF',position:'absolute', bottom:10, width:'100%', height:60, justifyContent:'center', alignItems:'center'}}>\n              <Text style={{color:'black',fontSize:20}}>\n                Checkout : 100$\n              </Text>\n          </TouchableOpacity>\n        \n\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex:1\n  },\n  text:{\n\n  }\n});\n\nexport default CartScreen;\n"]},"metadata":{},"sourceType":"module"}