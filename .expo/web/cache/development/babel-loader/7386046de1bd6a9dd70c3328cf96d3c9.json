{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { signInHandler, isSignedInHandler, isAdminUser } from \"../Firebase/auth\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function _callee() {\n    var adminUser;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(isSignedInHandler());\n\n          case 2:\n            if (!_context.sent) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(isAdminUser());\n\n          case 5:\n            adminUser = _context.sent;\n\n            if (adminUser) {\n              console.log(\"AdminHomeScreen\");\n              navigation.navigate(\"AdminHomeScreen\");\n            } else if (!adminUser) {\n              console.log(\"HomeScreen\");\n              navigation.navigate(\"HomeScreen\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 9:\n            console.log(\"User were not logged in!\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var sinInOperator = function sinInOperator() {\n    var res, adminUser;\n    return _regeneratorRuntime.async(function sinInOperator$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(signInHandler(email, password));\n\n          case 2:\n            res = _context2.sent;\n            console.log(res, \"------ Login -----\");\n\n            if (!res) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(isAdminUser());\n\n          case 7:\n            adminUser = _context2.sent;\n\n            if (adminUser) {\n              console.log(\"Admin\");\n              navigation.navigate(\"AdminHomeScreen\");\n            } else if (!adminUser) {\n              console.log(\"HomeScreen\");\n              navigation.navigate(\"HomeScreen\");\n            }\n\n            _context2.next = 12;\n            break;\n\n          case 11:\n            if (email.length || password.length <= 0) {\n              console.log(\"enter the required details\");\n              Alert.alert(\"Messagge\", \"Enter the required details\");\n            } else {\n              console.log(\"Wrong credentials\");\n              Alert.alert(\"Messagge\", \"Wrong Credentials\");\n            }\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: require(\"../../assets/GrocerFreshLogo.jpeg\"),\n    style: styles.img\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: \"red\",\n      fontWeight: \"200\",\n      margin: 10,\n      marginBottom: 50\n    }\n  }, \"Welcome to Grocer Fresh\"), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    placeholderTextColor: \"#f003f5c\",\n    value: email,\n    onChangeText: setEmail,\n    style: styles.textInput\n  })), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    placeholderTextColor: \"#f003f5c\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: setPassword,\n    style: styles.textInput\n  })), React.createElement(TouchableOpacity, null, React.createElement(Text, {\n    style: styles.forgotButton\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: sinInOperator\n  }, React.createElement(Text, {\n    style: styles.loginText\n  }, \"LOGIN\")), React.createElement(View, {\n    style: styles.signUpArea\n  }, React.createElement(Text, {\n    style: {\n      flex: 2\n    }\n  }, \"Don't have any account?\"), React.createElement(TouchableOpacity, {\n    style: {\n      flex: 1\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"SignupScreen\");\n    }\n  }, React.createElement(Text, {\n    style: styles.signUpText\n  }, \"SignUp\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  img: {\n    marginBottom: 10,\n    width: 200,\n    height: 200\n  },\n  inputView: {\n    backgroundColor: \"#D6E5FA\",\n    borderRadius: 20,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 10,\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#1597E5\"\n  },\n  textInput: {\n    height: 50,\n    padding: 10,\n    fontWeight: \"bold\"\n  },\n  forgotButton: {\n    height: 30,\n    marginBottom: 10\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 20,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"lightblue\",\n    borderWidth: 1\n  },\n  loginText: {\n    color: \"black\",\n    fontWeight: \"400\"\n  },\n  signUpArea: {\n    marginTop: 20,\n    flexDirection: \"row\",\n    marginHorizontal: 60\n  },\n  signUpText: {\n    color: \"#113CFC\",\n    fontWeight: \"bold\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","signInHandler","isSignedInHandler","isAdminUser","LoginScreen","navigation","email","setEmail","password","setPassword","adminUser","console","log","navigate","sinInOperator","res","length","Alert","alert","styles","container","require","img","fontSize","color","fontWeight","margin","marginBottom","inputView","textInput","forgotButton","loginBtn","loginText","signUpArea","flex","signUpText","StyleSheet","create","backgroundColor","alignItems","height","width","borderRadius","borderWidth","borderColor","padding","justifyContent","marginTop","flexDirection","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n} from \"react-native\";\nimport {\n  signInHandler,\n  isSignedInHandler,\n  isAdminUser,\n} from \"../Firebase/auth\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(async () => {\n    if (await isSignedInHandler()) {\n      const adminUser = await isAdminUser();\n      if (adminUser) {\n        // if user admin\n        console.log(\"AdminHomeScreen\");\n        navigation.navigate(\"AdminHomeScreen\");\n      } else if (!adminUser) {\n        console.log(\"HomeScreen\");\n        navigation.navigate(\"HomeScreen\");\n      }\n    } else {\n      console.log(\"User were not logged in!\");\n    }\n  }, []);\n\n  const sinInOperator = async () => {\n    const res = await signInHandler(email, password);\n    console.log(res, \"------ Login -----\");\n    if (res) {\n      const adminUser = await isAdminUser();\n      if (adminUser) {\n        console.log(\"Admin\");\n        navigation.navigate(\"AdminHomeScreen\");\n      } else if (!adminUser) {\n        console.log(\"HomeScreen\");\n        navigation.navigate(\"HomeScreen\");\n      }\n    } else {\n      if (email.length || password.length <= 0) {\n        console.log(\"enter the required details\");\n        Alert.alert(\"Messagge\", \"Enter the required details\");\n      } else {\n        console.log(\"Wrong credentials\");\n        Alert.alert(\"Messagge\", \"Wrong Credentials\");\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../../assets/GrocerFreshLogo.jpeg\")}\n        style={styles.img}\n      />\n      <Text\n        style={{\n          fontSize: 20,\n          color: \"red\",\n          fontWeight: \"200\",\n          margin: 10,\n          marginBottom: 50,\n        }}\n      >\n        Welcome to Grocer Fresh\n      </Text>\n      <View style={styles.inputView}>\n        <TextInput\n          placeholder=\"Email\"\n          placeholderTextColor=\"#f003f5c\"\n          value={email}\n          onChangeText={setEmail}\n          style={styles.textInput}\n        />\n      </View>\n      <View style={styles.inputView}>\n        <TextInput\n          placeholder=\"Password\"\n          placeholderTextColor=\"#f003f5c\"\n          secureTextEntry={true}\n          value={password}\n          onChangeText={setPassword}\n          style={styles.textInput}\n        />\n      </View>\n\n      <TouchableOpacity>\n        <Text style={styles.forgotButton}>Forgot Password?</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style={styles.loginBtn} onPress={sinInOperator}>\n        <Text style={styles.loginText}>LOGIN</Text>\n      </TouchableOpacity>\n\n      <View style={styles.signUpArea}>\n        <Text style={{ flex: 2 }}>Don't have any account?</Text>\n        <TouchableOpacity\n          style={{ flex: 1 }}\n          onPress={() => navigation.navigate(\"SignupScreen\")}\n        >\n          <Text style={styles.signUpText}>SignUp</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    //flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  img: {\n    marginBottom: 10,\n    width: 200,\n    height: 200,\n  },\n\n  inputView: {\n    backgroundColor: \"#D6E5FA\",\n    borderRadius: 20,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 10,\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#1597E5\",\n  },\n\n  textInput: {\n    height: 50,\n    padding: 10,\n    fontWeight: \"bold\",\n  },\n\n  forgotButton: {\n    height: 30,\n    marginBottom: 10,\n  },\n\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 20,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    backgroundColor: \"lightblue\",\n    borderWidth: 1,\n  },\n  loginText: {\n    color: \"black\",\n    fontWeight: \"400\",\n  },\n  signUpArea: {\n    marginTop: 20,\n    flexDirection: \"row\",\n    marginHorizontal: 60,\n  },\n\n  signUpText: {\n    color: \"#113CFC\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}