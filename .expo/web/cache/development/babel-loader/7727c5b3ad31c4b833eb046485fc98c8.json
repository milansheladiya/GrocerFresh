{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Slider, Divider, CheckBox, Icon } from \"react-native-elements\";\n\nvar FilterScreen = function FilterScreen(_ref) {\n  var _navigation$state, _navigation$state$par;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      minValue = _useState2[0],\n      setMinValue = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      maxValue = _useState4[0],\n      setMaxValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      CatCheck1 = _useState6[0],\n      setCatCheck1 = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      CatCheck2 = _useState8[0],\n      setCatCheck2 = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      CatCheck3 = _useState10[0],\n      setCatCheck3 = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      CatCheck4 = _useState12[0],\n      setCatCheck4 = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      CatCheck5 = _useState14[0],\n      setCatCheck5 = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      CatCheck6 = _useState16[0],\n      setCatCheck6 = _useState16[1];\n\n  var pageType = ((_navigation$state = navigation.state) == null ? void 0 : (_navigation$state$par = _navigation$state.params) == null ? void 0 : _navigation$state$par.type) || \"Personal\";\n  return React.createElement(View, {\n    style: (styles.container, styles.contentView)\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      margin: 2,\n      marginHorizontal: 10\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Personal\", {\n        type: pageType\n      });\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-back\",\n    size: 30,\n    color: \"black\",\n    style: {\n      marginTop: 15\n    }\n  })), React.createElement(Text, {\n    style: styles.title\n  }, \" Filter \")), React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      marginVertical: 10\n    }\n  }, \" \", \"Min Value : \", minValue, \" $\"), React.createElement(Slider, {\n    value: minValue,\n    onValueChange: setMinValue,\n    maximumValue: 100,\n    minimumValue: 0,\n    step: 1,\n    allowTouchTrack: true,\n    trackStyle: {\n      height: 5\n    },\n    thumbStyle: {\n      height: 20,\n      width: 20\n    },\n    thumbProps: {\n      children: React.createElement(Icon, {\n        name: \"usd\",\n        type: \"font-awesome\",\n        size: 20,\n        reverse: true,\n        containerStyle: {\n          bottom: 20,\n          right: 20\n        },\n        color: \"#557C55\"\n      })\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      marginVertical: 10\n    }\n  }, \" \", \"Max Value : \", maxValue, \" $\"), React.createElement(Slider, {\n    value: maxValue,\n    onValueChange: setMaxValue,\n    maximumValue: 100,\n    minimumValue: 0,\n    step: 1,\n    allowTouchTrack: true,\n    trackStyle: {\n      height: 5\n    },\n    thumbStyle: {\n      height: 20,\n      width: 20\n    },\n    thumbProps: {\n      children: React.createElement(Icon, {\n        name: \"usd\",\n        type: \"font-awesome\",\n        size: 20,\n        reverse: true,\n        containerStyle: {\n          bottom: 20,\n          right: 20\n        },\n        color: \"#557C55\"\n      })\n    }\n  }), React.createElement(Divider, {\n    width: 5,\n    color: \"#292C6D\",\n    style: {\n      width: \"100%\",\n      marginVertical: 20,\n      borderRadius: 30\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      alignSelf: \"center\",\n      marginBottom: 10\n    }\n  }, \" \", \"Category\", \" \"), React.createElement(ScrollView, null, React.createElement(CheckBox, {\n    checked: CatCheck1,\n    title: \"vegetables\",\n    onPress: function onPress() {\n      return setCatCheck1(!CatCheck1);\n    },\n    checked: CatCheck1\n  }), React.createElement(CheckBox, {\n    checked: CatCheck2,\n    title: \"Fruits\",\n    onPress: function onPress() {\n      return setCatCheck2(!CatCheck2);\n    },\n    checked: CatCheck2\n  }), React.createElement(CheckBox, {\n    checked: CatCheck3,\n    title: \"meat\",\n    onPress: function onPress() {\n      return setCatCheck3(!CatCheck3);\n    },\n    checked: CatCheck3\n  }), React.createElement(CheckBox, {\n    checked: CatCheck4,\n    title: \"frozenFood\",\n    onPress: function onPress() {\n      return setCatCheck4(!CatCheck4);\n    },\n    checked: CatCheck4\n  }), React.createElement(CheckBox, {\n    checked: CatCheck5,\n    title: \"bakeryFood\",\n    onPress: function onPress() {\n      return setCatCheck5(!CatCheck5);\n    },\n    checked: CatCheck5\n  }), React.createElement(CheckBox, {\n    checked: CatCheck6,\n    title: \"dairy\",\n    onPress: function onPress() {\n      return setCatCheck6(!CatCheck6);\n    },\n    checked: CatCheck6\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button\n  }, React.createElement(Text, null, \"Apply \")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  contentView: {\n    padding: 20,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"stretch\"\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"#1C6DD0\",\n    marginVertical: 10,\n    alignSelf: \"center\",\n    marginLeft: 20\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#D3DEDC\",\n    padding: 10,\n    marginTop: 10\n  }\n});\nexport default FilterScreen;","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/screens/FilterScreen.js"],"names":["React","useState","Slider","Divider","CheckBox","Icon","FilterScreen","navigation","minValue","setMinValue","maxValue","setMaxValue","CatCheck1","setCatCheck1","CatCheck2","setCatCheck2","CatCheck3","setCatCheck3","CatCheck4","setCatCheck4","CatCheck5","setCatCheck5","CatCheck6","setCatCheck6","pageType","state","params","type","styles","container","contentView","flexDirection","margin","marginHorizontal","navigate","marginTop","title","fontWeight","marginVertical","height","width","children","bottom","right","borderRadius","alignSelf","marginBottom","button","StyleSheet","create","flex","backgroundColor","alignItems","padding","justifyContent","fontSize","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Slider, Divider, CheckBox, Icon } from \"react-native-elements\";\n\nconst FilterScreen = ({ navigation }) => {\n  const [minValue, setMinValue] = useState(0);\n  const [maxValue, setMaxValue] = useState(10);\n\n  // list of categories\n  const [CatCheck1, setCatCheck1] = useState(false);\n  const [CatCheck2, setCatCheck2] = useState(false);\n  const [CatCheck3, setCatCheck3] = useState(false);\n  const [CatCheck4, setCatCheck4] = useState(false);\n  const [CatCheck5, setCatCheck5] = useState(false);\n  const [CatCheck6, setCatCheck6] = useState(false);\n  const pageType = navigation.state?.params?.type || \"Personal\";\n\n  return (\n    <View style={(styles.container, styles.contentView)}>\n      <View style={{ flexDirection: \"row\", margin: 2, marginHorizontal: 10 }}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Personal\", { type: pageType })}\n        >\n          <Icon\n            name=\"arrow-back\"\n            size={30}\n            color={\"black\"}\n            style={{ marginTop: 15 }}\n          />\n        </TouchableOpacity>\n        <Text style={styles.title}> Filter </Text>\n      </View>\n      <Text style={{ fontWeight: \"bold\", marginVertical: 10 }}>\n        {\" \"}\n        Min Value : {minValue} $\n      </Text>\n      <Slider\n        value={minValue}\n        onValueChange={setMinValue}\n        maximumValue={100}\n        minimumValue={0}\n        step={1}\n        allowTouchTrack\n        trackStyle={{ height: 5 }}\n        thumbStyle={{ height: 20, width: 20 }}\n        thumbProps={{\n          children: (\n            <Icon\n              name=\"usd\"\n              type=\"font-awesome\"\n              size={20}\n              reverse\n              containerStyle={{ bottom: 20, right: 20 }}\n              color=\"#557C55\"\n            />\n          ),\n        }}\n      />\n\n      <Text style={{ fontWeight: \"bold\", marginVertical: 10 }}>\n        {\" \"}\n        Max Value : {maxValue} $\n      </Text>\n      <Slider\n        value={maxValue}\n        onValueChange={setMaxValue}\n        maximumValue={100}\n        minimumValue={0}\n        step={1}\n        allowTouchTrack\n        trackStyle={{ height: 5 }}\n        thumbStyle={{ height: 20, width: 20 }}\n        thumbProps={{\n          children: (\n            <Icon\n              name=\"usd\"\n              type=\"font-awesome\"\n              size={20}\n              reverse\n              containerStyle={{ bottom: 20, right: 20 }}\n              color=\"#557C55\"\n            />\n          ),\n        }}\n      />\n\n      <Divider\n        width={5}\n        color=\"#292C6D\"\n        style={{ width: \"100%\", marginVertical: 20, borderRadius: 30 }}\n      />\n\n      <Text\n        style={{ fontWeight: \"bold\", alignSelf: \"center\", marginBottom: 10 }}\n      >\n        {\" \"}\n        Category{\" \"}\n      </Text>\n      <ScrollView>\n        <CheckBox\n          checked={CatCheck1}\n          title=\"vegetables\"\n          onPress={() => setCatCheck1(!CatCheck1)}\n          checked={CatCheck1}\n        />\n\n        <CheckBox\n          checked={CatCheck2}\n          title=\"Fruits\"\n          onPress={() => setCatCheck2(!CatCheck2)}\n          checked={CatCheck2}\n        />\n\n        <CheckBox\n          checked={CatCheck3}\n          title=\"meat\"\n          onPress={() => setCatCheck3(!CatCheck3)}\n          checked={CatCheck3}\n        />\n\n        <CheckBox\n          checked={CatCheck4}\n          title=\"frozenFood\"\n          onPress={() => setCatCheck4(!CatCheck4)}\n          checked={CatCheck4}\n        />\n\n        <CheckBox\n          checked={CatCheck5}\n          title=\"bakeryFood\"\n          onPress={() => setCatCheck5(!CatCheck5)}\n          checked={CatCheck5}\n        />\n\n        <CheckBox\n          checked={CatCheck6}\n          title=\"dairy\"\n          onPress={() => setCatCheck6(!CatCheck6)}\n          checked={CatCheck6}\n        />\n      </ScrollView>\n\n      <TouchableOpacity style={styles.button}>\n        <Text>Apply </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  contentView: {\n    padding: 20,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"stretch\",\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"#1C6DD0\",\n    marginVertical: 10,\n    alignSelf: \"center\",\n    marginLeft: 20,\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#D3DEDC\",\n    padding: 10,\n    marginTop: 10,\n  },\n});\n\nexport default FilterScreen;\n"]},"metadata":{},"sourceType":"module"}