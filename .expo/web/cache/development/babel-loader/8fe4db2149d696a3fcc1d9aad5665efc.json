{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { insertWithSetDocHandler } from \"../Firebase/insert\";\nimport { signUpHandler, getUserIdHandler } from \"../Firebase/auth\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { getAuth } from \"firebase/auth\";\n\nvar SignupScreen = function SignupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      contact = _useState6[0],\n      setContact = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      postal = _useState10[0],\n      setPostal = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  function backAlert() {\n    navigation.navigate(\"LoginScreen\");\n    console.log(\"back to loginScreen\");\n  }\n\n  var signUpOperator = function signUpOperator() {\n    var data, isRes, uid, res;\n    return _regeneratorRuntime.async(function signUpOperator$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              name: name,\n              email: email.toLowerCase(),\n              contact: contact,\n              address: address,\n              postal: postal.toUpperCase(),\n              isAdmin: false\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signUpHandler(email, password, name));\n\n          case 3:\n            isRes = _context.sent;\n\n            if (isRes > 0) {\n              uid = getAuth().currentUser.uid;\n              res = insertWithSetDocHandler([\"customers\", uid], data);\n              resetAllField();\n              navigation.navigate(\"LoginScreen\");\n            } else {\n              console.log(\"something went wrong!\");\n\n              if (name.length <= 0 || email.length <= 0 || contact.length <= 0 || address.length <= 0 || postal.length <= 0 || password.length <= 0) {\n                Alert.alert(\"Enter required Details\");\n              }\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var resetAllField = function resetAllField() {\n    setName(\"\");\n    setEmail(\"\");\n    setContact(\"\");\n    setAddress(\"\");\n    setPostal(\"\");\n    setPassword(\"\");\n  };\n\n  return React.createElement(View, {\n    style: {\n      paddingTop: 40,\n      backgroundColor: \"white\",\n      height: Dimensions.get(\"window\").height,\n      flex: 1\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginHorizontal: 20\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: backAlert\n  }, React.createElement(Icon, {\n    name: \"arrow-back\",\n    size: 30,\n    color: \"black\",\n    style: {\n      margin: 10\n    }\n  })), React.createElement(Image, {\n    source: require(\"../../assets/GrocerFreshLogo.png\"),\n    style: styles.img\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      alignSelf: \"center\",\n      color: \"  \",\n      marginTop: 10\n    }\n  }, \" \", \"Sign Up\", \" \"), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: true\n  }, React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \"Name : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Enter the Name\",\n    value: name,\n    onChangeText: setName\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \"Email : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Enter the Email\",\n    autoComplete: \"email\",\n    value: email,\n    onChangeText: setEmail\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \"Contact No : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Contact Number\",\n    autoComplete: \"cc-number\",\n    value: contact,\n    onChangeText: setContact,\n    maxLength: 10\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \" Address : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Full Address\",\n    autoComplete: \"street-address\",\n    value: address,\n    onChangeText: setAddress\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \" Pin Code : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Pin Code\",\n    autoComplete: \"postal-code\",\n    value: postal,\n    onChangeText: setPostal,\n    maxLength: 6\n  })), React.createElement(View, {\n    style: styles.viewContain\n  }, React.createElement(Text, {\n    style: styles.txt\n  }, \" Password : \"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Password\",\n    autoComplete: \"password\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: setPassword\n  })), React.createElement(View, {\n    style: {\n      marginTop: 40\n    }\n  }, React.createElement(Button, {\n    title: \"SignUp\",\n    style: {\n      padding: 20\n    },\n    onPress: signUpOperator\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  img: {\n    width: 220,\n    height: 100,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    marginLeft: 30\n  },\n  viewContain: {\n    flexDirection: \"row\",\n    padding: 20\n  },\n  txt: {\n    flex: 1,\n    fontSize: 20\n  },\n  inputStyle: {\n    flex: 2,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingVertical: 5,\n    borderWidth: 1,\n    borderRadius: 20,\n    width: \"50%\",\n    fontSize: 20,\n    borderColor: \"black\"\n  }\n});\nexport default SignupScreen;","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/screens/SignupScreen.js"],"names":["React","useEffect","useState","insertWithSetDocHandler","signUpHandler","getUserIdHandler","Icon","getAuth","SignupScreen","navigation","name","setName","email","setEmail","contact","setContact","address","setAddress","postal","setPostal","password","setPassword","backAlert","navigate","console","log","signUpOperator","data","toLowerCase","toUpperCase","isAdmin","isRes","uid","currentUser","res","resetAllField","length","Alert","alert","paddingTop","backgroundColor","height","Dimensions","get","flex","flexDirection","marginHorizontal","margin","require","styles","img","fontSize","alignSelf","color","marginTop","viewContain","txt","inputStyle","padding","StyleSheet","create","width","justifyContent","alignContent","marginLeft","paddingLeft","paddingRight","paddingVertical","borderWidth","borderRadius","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  ScrollView,\n  TextInput,\n  Button,\n  Dimensions,\n  Alert,\n  TouchableOpacity,\n} from \"react-native\";\nimport { insertWithSetDocHandler } from \"../Firebase/insert\";\nimport { signUpHandler, getUserIdHandler } from \"../Firebase/auth\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { getAuth } from \"firebase/auth\";\n\nconst SignupScreen = ({ navigation }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postal, setPostal] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function backAlert() {\n    navigation.navigate(\"LoginScreen\");\n    console.log(\"back to loginScreen\");\n  }\n\n  const signUpOperator = async () => {\n    const data = {\n      name: name,\n      email: email.toLowerCase(),\n      contact: contact,\n      address: address,\n      postal: postal.toUpperCase(),\n      isAdmin: false,\n    };\n\n    const isRes = await signUpHandler(email, password, name);\n    if (isRes > 0) {\n      const uid = getAuth().currentUser.uid;\n      const res = insertWithSetDocHandler([\"customers\", uid], data);\n      resetAllField();\n      navigation.navigate(\"LoginScreen\");\n    } else {\n      console.log(\"something went wrong!\");\n      if (\n        name.length <= 0 ||\n        email.length <= 0 ||\n        contact.length <= 0 ||\n        address.length <= 0 ||\n        postal.length <= 0 ||\n        password.length <= 0\n      ) {\n        Alert.alert(\"Enter required Details\");\n      }\n    }\n  };\n\n  const resetAllField = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setContact(\"\");\n    setAddress(\"\");\n    setPostal(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <View\n      style={{\n        paddingTop: 40,\n        backgroundColor: \"white\",\n        height: Dimensions.get(\"window\").height,\n        flex: 1,\n      }}\n    >\n      <View style={{ flexDirection: \"row\", marginHorizontal: 20 }}>\n        <TouchableOpacity onPress={backAlert}>\n          <Icon\n            name=\"arrow-back\"\n            size={30}\n            color={\"black\"}\n            style={{ margin: 10 }}\n          />\n        </TouchableOpacity>\n        <Image\n          source={require(\"../../assets/GrocerFreshLogo.png\")}\n          style={styles.img}\n        />\n      </View>\n      <Text\n        style={{\n          fontSize: 20,\n          alignSelf: \"center\",\n          color: \"  \",\n          marginTop: 10,\n        }}\n      >\n        {\" \"}\n        Sign Up{\" \"}\n      </Text>\n      <ScrollView showsVerticalScrollIndicator={true}>\n        <View style={styles.viewContain}>\n          <Text style={styles.txt}>Name : </Text>\n          <TextInput\n            style={styles.inputStyle}\n            placeholder=\"Enter the Name\"\n            value={name}\n            onChangeText={setName}\n          />\n        </View>\n        <View style={styles.viewContain}>\n          <Text style={styles.txt}>Email : </Text>\n          <TextInput\n            style={styles.inputStyle}\n            placeholder=\"Enter the Email\"\n            autoComplete=\"email\"\n            value={email}\n            onChangeText={setEmail}\n          />\n        </View>\n        <View style={styles.viewContain}>\n          <Text style={styles.txt}>Contact No : </Text>\n          <TextInput\n            style={styles.inputStyle}\n            placeholder=\"Contact Number\"\n            autoComplete=\"cc-number\"\n            value={contact}\n            onChangeText={setContact}\n            maxLength={10}\n          />\n        </View>\n        <View style={styles.viewContain}>\n          <Text style={styles.txt}> Address : </Text>\n          <TextInput\n            style={styles.inputStyle}\n            placeholder=\"Full Address\"\n            autoComplete=\"street-address\"\n            value={address}\n            onChangeText={setAddress}\n          />\n        </View>\n        <View style={styles.viewContain}>\n          <Text style={styles.txt}> Pin Code : </Text>\n          <TextInput\n            style={styles.inputStyle}\n            placeholder=\"Pin Code\"\n            autoComplete=\"postal-code\"\n            value={postal}\n            onChangeText={setPostal}\n            maxLength={6}\n          />\n        </View>\n        <View style={styles.viewContain}>\n          <Text style={styles.txt}> Password : </Text>\n          <TextInput\n            style={styles.inputStyle}\n            placeholder=\"Password\"\n            autoComplete=\"password\"\n            secureTextEntry={true}\n            value={password}\n            onChangeText={setPassword}\n          />\n        </View>\n        <View style={{ marginTop: 40 }}>\n          <Button\n            title=\"SignUp\"\n            style={{ padding: 20 }}\n            onPress={signUpOperator}\n          />\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  img: {\n    width: 220,\n    height: 100,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    marginLeft: 30,\n  },\n  viewContain: {\n    flexDirection: \"row\",\n    padding: 20,\n  },\n  txt: {\n    flex: 1,\n    fontSize: 20,\n  },\n  inputStyle: {\n    flex: 2,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingVertical: 5,\n    borderWidth: 1,\n    borderRadius: 20,\n    width: \"50%\",\n    fontSize: 20,\n    borderColor: \"black\",\n  },\n});\n\nexport default SignupScreen;\n"]},"metadata":{},"sourceType":"module"}