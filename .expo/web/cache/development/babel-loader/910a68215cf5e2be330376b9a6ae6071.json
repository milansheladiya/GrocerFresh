{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { app } from \"./config\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile, signOut } from \"firebase/auth\";\nimport { readAllWithId } from \"../Firebase/read\";\nvar auth = getAuth();\nexport var isAdminVar = false;\nexport var signUpHandler = function signUpHandler(email, password, name) {\n  var res;\n  return _regeneratorRuntime.async(function signUpHandler$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(email, \"  === \", password);\n          res = false;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password).then(function _callee(userCredential) {\n            var user;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    user = userCredential.user;\n                    res = true;\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n          }));\n\n        case 4:\n          return _context2.abrupt(\"return\", res);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signInHandler = function signInHandler(email, password) {\n  var res;\n  return _regeneratorRuntime.async(function signInHandler$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          res = false;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n            var user = userCredential.user;\n            console.log(\"Login With : \", user.email);\n            isAdminOperator();\n            res = true;\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n          }));\n\n        case 3:\n          return _context3.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var isSignedInHandler = function isSignedInHandler() {\n  var res;\n  return _regeneratorRuntime.async(function isSignedInHandler$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          res = false;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(auth.onAuthStateChanged(function (user) {\n            if (user) {\n              res = true;\n            } else {\n              console.log(\"Not Done\");\n            }\n          }));\n\n        case 3:\n          return _context4.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getUserIdHandler = function getUserIdHandler() {\n  var uid;\n  return _regeneratorRuntime.async(function getUserIdHandler$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          uid = null;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(auth.onAuthStateChanged(function (user) {\n            if (user) {\n              uid = user.uid;\n            } else {\n              console.log(\"user not logged in!\");\n            }\n          }));\n\n        case 3:\n          return _context5.abrupt(\"return\", uid);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signOutHandler = function signOutHandler() {\n  return _regeneratorRuntime.async(function signOutHandler$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          signOut(auth).then(function () {\n            console.log(\"Sign out completed!\");\n          }).catch(function (error) {\n            return console.log(error.message);\n          });\n\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar isAdminOperator = function isAdminOperator() {\n  var res;\n  return _regeneratorRuntime.async(function isAdminOperator$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.t0 = _regeneratorRuntime;\n          _context7.t1 = readAllWithId;\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(getUserIdHandler());\n\n        case 4:\n          _context7.t2 = _context7.sent;\n          _context7.t3 = [\"customers\", _context7.t2];\n          _context7.t4 = (0, _context7.t1)(_context7.t3);\n          _context7.next = 9;\n          return _context7.t0.awrap.call(_context7.t0, _context7.t4);\n\n        case 9:\n          res = _context7.sent;\n          isAdminVar = res.data().isAdmin;\n\n        case 11:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport var isAdminUser = function isAdminUser() {\n  var res;\n  return _regeneratorRuntime.async(function isAdminUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          console.log(getAuth().currentUser.uid);\n          _context8.next = 3;\n          return _regeneratorRuntime.awrap(readAllWithId([\"customers\", getAuth().currentUser.uid]));\n\n        case 3:\n          res = _context8.sent;\n          return _context8.abrupt(\"return\", res.data().isAdmin);\n\n        case 5:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/Firebase/auth.js"],"names":["React","useState","useEffect","app","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateProfile","signOut","readAllWithId","auth","isAdminVar","signUpHandler","email","password","name","console","log","res","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","signInHandler","isAdminOperator","isSignedInHandler","onAuthStateChanged","getUserIdHandler","uid","signOutHandler","data","isAdmin","isAdminUser","currentUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { app } from \"./config\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  updateProfile,\n  signOut,\n} from \"firebase/auth\";\nimport { readAllWithId } from \"../Firebase/read\";\n\nconst auth = getAuth();\n\nexport let isAdminVar = false;\n\n// ######################################################  Signup Function  ######################################################\nexport const signUpHandler = async (email, password, name) => {\n  console.log(email, \"  === \", password);\n  let res = false;\n  await createUserWithEmailAndPassword(auth, email, password)\n    .then(async (userCredential) => {\n      let user = userCredential.user;\n      //console.log(user.email,\"^^^^^^^^\");\n\n      // setting up user name in authentication module\n      /* if (name) {\n        await updateProfile(auth, {\n          displayName: name,\n        });\n      } */\n      res = true;\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    });\n  return res;\n};\n\n// ###################################################### Login Functions  ######################################################\nexport const signInHandler = async (email, password) => {\n  let res = false;\n  await signInWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n      const user = userCredential.user;\n      console.log(\"Login With : \", user.email);\n      //-----set user is admin or not\n      isAdminOperator();\n      res = true;\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    });\n  return res;\n};\n\n// ######################################################  If already Logged in  ######################################################\nexport const isSignedInHandler = async () => {\n  let res = false;\n  await auth.onAuthStateChanged((user) => {\n    if (user) {\n      //console.log(\"done\");\n      res = true;\n    } else {\n      console.log(\"Not Done\");\n    }\n  });\n\n  return res;\n};\n\n// Get uid of logged in user\nexport const getUserIdHandler = async () => {\n  let uid = null;\n  await auth.onAuthStateChanged((user) => {\n    if (user) {\n      //console.log(\"done\");\n      uid = user.uid;\n    } else {\n      console.log(\"user not logged in!\");\n    }\n  });\n\n  return uid;\n};\n\n// ######################################################  To do sign out  ######################################################\n\nexport const signOutHandler = async () => {\n  signOut(auth)\n    .then(() => {\n      console.log(\"Sign out completed!\");\n    })\n    .catch((error) => console.log(error.message));\n};\n\nconst isAdminOperator = async () => {\n  const res = await readAllWithId([\"customers\", await getUserIdHandler()]);\n  // console.log(res.data().isAdmin, \"-------- inside fu- -------n\");\n  isAdminVar = res.data().isAdmin;\n};\n\nexport const isAdminUser = async () => {\n  console.log(getAuth().currentUser.uid);\n  const res = await readAllWithId([\"customers\", getAuth().currentUser.uid]);\n  // console.log(res.data().isAdmin, \"-------- inside fu- -------n\");\n  return res.data().isAdmin;\n};\n"]},"metadata":{},"sourceType":"module"}