{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { getAuth } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Buttons from \"../components/Buttons\";\nimport { signOutHandler } from \"../Firebase/auth\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar AccountScreen = function AccountScreen(_ref) {\n  var _navigation$state, _navigation$state$par;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var pageType = ((_navigation$state = navigation.state) == null ? void 0 : (_navigation$state$par = _navigation$state.params) == null ? void 0 : _navigation$state$par.type) || \"Account Details\";\n  useEffect(function () {\n    var auth = getAuth();\n    console.log(auth.currentUser);\n    setCurrentUser(auth.currentUser);\n  }, []);\n\n  function showAlert() {\n    Alert.alert(\"Do you want to logout\", \"\", [{\n      text: \"Yes\",\n      onPress: function onPress() {\n        signOutHandler();\n        navigation.replace(\"LoginScreen\");\n        Alert.alert(\"Message\", \"Logged out sucessfully\");\n      }\n    }, {\n      text: \"No\",\n      onPress: function onPress() {\n        return navigation.navigate(\"AccountScreen\");\n      }\n    }]);\n  }\n\n  return React.createElement(View, {\n    style: {\n      width: width,\n      height: height,\n      flex: 1\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 0,\n      width: Dimensions.get(\"window\").width,\n      backgroundColor: \"lightblue\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\",\n      zIndex: -1,\n      position: \"relative\",\n      paddingTop: 40\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: Dimensions.get(\"window\").width,\n      marginHorizontal: \"auto\",\n      marginVertical: 5,\n      paddingVertical: 6,\n      fontSize: 23,\n      color: \"black\",\n      textAlign: \"center\",\n      fontFamily: \"Arial\",\n      fontWeight: \"bold\",\n      height: 30,\n      textTransform: \"uppercase\",\n      marginBottom: 10\n    }\n  }, pageType)), React.createElement(View, {\n    style: {\n      width: Dimensions.get(\"window\").width,\n      height: height,\n      backgroundColor: \"white\"\n    }\n  }, React.createElement(View, {\n    style: {\n      width: Dimensions.get(\"window\").width,\n      height: height,\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingVertical: 300,\n      paddingTop: 10,\n      backgroundColor: \"white\"\n    }\n  }, React.createElement(Icon, {\n    name: \"person-circle-outline\",\n    size: 70,\n    style: {\n      marginBottom: 10\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginBottom: 20,\n      fontSize: 20\n    }\n  }, \"Good to be back !\"), React.createElement(Buttons, {\n    label: \"Home\",\n    onPress: function onPress() {\n      return navigation.navigate(\"HomeScreen\");\n    }\n  }), React.createElement(Buttons, {\n    label: \"Orders\",\n    onPress: function onPress() {\n      return navigation.navigate();\n    }\n  }), React.createElement(Buttons, {\n    label: \"Account information\",\n    onPress: function onPress() {\n      return navigation.navigate();\n    }\n  }), React.createElement(Icon, {\n    name: \"log-out-outline\",\n    size: 30,\n    onPress: showAlert,\n    color: \"maroon\",\n    style: {\n      margin: 5,\n      marginVertical: 70\n    }\n  }, \"Logout\"))));\n};\n\nexport default AccountScreen;","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/screens/AccountScreen.js"],"names":["getAuth","React","useEffect","useState","Icon","Buttons","signOutHandler","Dimensions","get","width","height","AccountScreen","navigation","currentUser","setCurrentUser","pageType","state","params","type","auth","console","log","showAlert","Alert","alert","text","onPress","replace","navigate","flex","marginTop","backgroundColor","flexDirection","justifyContent","zIndex","position","paddingTop","marginHorizontal","marginVertical","paddingVertical","fontSize","color","textAlign","fontFamily","fontWeight","textTransform","marginBottom","alignItems","margin"],"mappings":"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","sourcesContent":["import { getAuth } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  Button,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport Buttons from \"../components/Buttons\";\nimport { signOutHandler } from \"../Firebase/auth\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst AccountScreen = ({ navigation }) => {\n  const [currentUser, setCurrentUser] = useState({});\n  const pageType = navigation.state?.params?.type || \"Account Details\";\n\n  useEffect(() => {\n    const auth = getAuth();\n    console.log(auth.currentUser);\n    setCurrentUser(auth.currentUser);\n  }, []);\n  function showAlert() {\n    Alert.alert(\"Do you want to logout\", \"\", [\n      {\n        text: \"Yes\",\n        onPress: () => {\n          signOutHandler();\n          navigation.replace(\"LoginScreen\");\n          Alert.alert(\"Message\", \"Logged out sucessfully\");\n        },\n      },\n      { text: \"No\", onPress: () => navigation.navigate(\"AccountScreen\") },\n    ]);\n  }\n\n  return (\n    <View style={{ width: width, height: height, flex: 1 }}>\n      <View\n        style={{\n          marginTop: 0,\n          width: Dimensions.get(\"window\").width,\n          backgroundColor: \"lightblue\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          zIndex: -1,\n          position: \"relative\",\n          paddingTop: 40,\n        }}\n      >\n        <Text\n          style={{\n            width: Dimensions.get(\"window\").width,\n            marginHorizontal: \"auto\",\n            marginVertical: 5,\n            paddingVertical: 6,\n            fontSize: 23,\n            color: \"black\",\n            textAlign: \"center\",\n            fontFamily: \"Arial\",\n            fontWeight: \"bold\",\n            height: 30,\n            textTransform: \"uppercase\",\n            marginBottom: 10,\n          }}\n        >\n          {pageType}\n        </Text>\n      </View>\n\n      <View\n        style={{\n          width: Dimensions.get(\"window\").width,\n          height: height,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View\n          style={{\n            width: Dimensions.get(\"window\").width,\n            height: height,\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            paddingVertical: 300,\n            paddingTop: 10,\n            backgroundColor: \"white\",\n          }}\n        >\n          <Icon\n            name=\"person-circle-outline\"\n            size={70}\n            style={{ marginBottom: 10 }}\n          />\n          <Text style={{ marginBottom: 20, fontSize: 20 }}>\n            Good to be back !\n          </Text>\n          <Buttons\n            label=\"Home\"\n            onPress={() => navigation.navigate(\"HomeScreen\")}\n          />\n          <Buttons label=\"Orders\" onPress={() => navigation.navigate()} />\n          <Buttons\n            label=\"Account information\"\n            onPress={() => navigation.navigate()}\n          />\n          <Icon\n            name=\"log-out-outline\"\n            size={30}\n            onPress={showAlert}\n            color={\"maroon\"}\n            style={{ margin: 5, marginVertical: 70 }}\n          >\n            Logout\n          </Icon>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default AccountScreen;\n"]},"metadata":{},"sourceType":"module"}