{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { app } from \"./config\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, doc, addDoc, setDoc, Timestamp, query, where } from \"firebase/firestore\";\nvar db = getFirestore();\nexport var insertHandler = function insertHandler(arr, obj) {\n  var docRef;\n  return _regeneratorRuntime.async(function insertHandler$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(arr[0], \" ---- \", obj);\n          docRef = null;\n\n          if (!(arr.length === 1)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0]), obj));\n\n        case 6:\n          _readOnlyError(\"docRef\");\n\n          _context.next = 25;\n          break;\n\n        case 9:\n          if (!(arr.length === 2)) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1]), obj));\n\n        case 12:\n          _readOnlyError(\"docRef\");\n\n          _context.next = 25;\n          break;\n\n        case 15:\n          if (!(arr.length === 3)) {\n            _context.next = 21;\n            break;\n          }\n\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1], arr[2]), obj));\n\n        case 18:\n          _readOnlyError(\"docRef\");\n\n          _context.next = 25;\n          break;\n\n        case 21:\n          if (!(arr.length === 4)) {\n            _context.next = 25;\n            break;\n          }\n\n          _context.next = 24;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, arr[0], arr[1], arr[2], arr[3]), obj));\n\n        case 24:\n          _readOnlyError(\"docRef\");\n\n        case 25:\n          console.log(\"Document written with ID: \", docRef.id);\n          return _context.abrupt(\"return\", true);\n\n        case 29:\n          _context.prev = 29;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error adding document: \", _context.t0);\n          return _context.abrupt(\"return\", false);\n\n        case 33:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 29]], Promise);\n};","map":{"version":3,"sources":["/Users/milansheladiya/College Doc/Sem 3/react-native/Project/GrocerFresh/src/Firebase/insert.js"],"names":["app","getFirestore","collection","doc","addDoc","setDoc","Timestamp","query","where","db","insertHandler","arr","obj","console","log","docRef","length","id","error"],"mappings":";;AAAA,SAAQA,GAAR;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAAQC,UAAR,EAAmBC,GAAnB,EAAuBC,MAAvB,EAA8BC,MAA9B,EAAqCC,SAArC,EAA+CC,KAA/C,EAAsDC,KAAtD,QAAmE,oBAAnE;AAEA,IAAMC,EAAE,GAAGR,YAAY,EAAvB;AAIA,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAAC,CAAD,CAAf,EAAmB,QAAnB,EAA4BC,GAA5B;AACMG,UAAAA,MAHe,GAGN,IAHM;;AAAA,gBAIlBJ,GAAG,CAACK,MAAJ,KAAe,CAJG;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAMFZ,MAAM,CAACF,UAAU,CAACO,EAAD,EAAKE,GAAG,CAAC,CAAD,CAAR,CAAX,EAAyBC,GAAzB,CANJ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,gBAQbD,GAAG,CAACK,MAAJ,KAAe,CARF;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAUFZ,MAAM,CAACF,UAAU,CAACO,EAAD,EAAKE,GAAG,CAAC,CAAD,CAAR,EAAYA,GAAG,CAAC,CAAD,CAAf,CAAX,EAAgCC,GAAhC,CAVJ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,gBAYbD,GAAG,CAACK,MAAJ,KAAe,CAZF;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAcFZ,MAAM,CAACF,UAAU,CAACO,EAAD,EAAKE,GAAG,CAAC,CAAD,CAAR,EAAYA,GAAG,CAAC,CAAD,CAAf,EAAmBA,GAAG,CAAC,CAAD,CAAtB,CAAX,EAAuCC,GAAvC,CAdJ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,gBAgBbD,GAAG,CAACK,MAAJ,KAAe,CAhBF;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAkBFZ,MAAM,CAACF,UAAU,CAACO,EAAD,EAAKE,GAAG,CAAC,CAAD,CAAR,EAAYA,GAAG,CAAC,CAAD,CAAf,EAAmBA,GAAG,CAAC,CAAD,CAAtB,EAA0BA,GAAG,CAAC,CAAD,CAA7B,CAAX,EAA8CC,GAA9C,CAlBJ;;AAAA;AAAA;;AAAA;AAoBvBC,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CC,MAAM,CAACE,EAAjD;AApBuB,2CAqBhB,IArBgB;;AAAA;AAAA;AAAA;AAuBvBJ,UAAAA,OAAO,CAACK,KAAR,CAAc,yBAAd;AAvBuB,2CAwBhB,KAxBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["import {app} from './config';\nimport { getFirestore } from \"firebase/firestore\";\nimport {collection,doc,addDoc,setDoc,Timestamp,query, where } from \"firebase/firestore\";\n\nconst db = getFirestore();\n\n// ================================================== new data insertion =================================\n\nexport const insertHandler = async (arr,obj) => {\n    try {\n        console.log(arr[0],\" ---- \",obj);\n        const docRef = null;\n        if(arr.length === 1)\n        {\n            docRef = await addDoc(collection(db, arr[0]), obj);\n        }\n        else if(arr.length === 2)\n        {\n            docRef = await addDoc(collection(db, arr[0],arr[1]), obj);\n        }\n        else if(arr.length === 3)\n        {\n            docRef = await addDoc(collection(db, arr[0],arr[1],arr[2]), obj);\n        }\n        else if(arr.length === 4)\n        {\n            docRef = await addDoc(collection(db, arr[0],arr[1],arr[2],arr[3]), obj);\n        }\n      console.log(\"Document written with ID: \", docRef.id);\n      return true;\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n      return false;\n    }\n  };\n\n\n  //========================================== add in existing documents ====================\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}