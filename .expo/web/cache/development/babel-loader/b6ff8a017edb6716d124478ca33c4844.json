{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { app } from \"./config\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nvar auth = getAuth();\nexport var signUpHandler = function signUpHandler(email, password) {\n  return _regeneratorRuntime.async(function signUpHandler$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(email, \"  === \", password);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n            var user = userCredential.user;\n            console.log(user.email);\n            return true;\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n            return false;\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signInHandler = function signInHandler() {\n  return _regeneratorRuntime.async(function signInHandler$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n            var user = userCredential.user;\n            console.log(\"Login With : \", user.email);\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var isSignedInHandler = function isSignedInHandler() {\n  return _regeneratorRuntime.async(function isSignedInHandler$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(auth.onAuthStateChanged(function (user) {\n            if (user) {\n              return true;\n            } else {\n              return false;\n            }\n          }));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signOutHandler = function signOutHandler() {\n  return _regeneratorRuntime.async(function signOutHandler$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(auth.signOut().then(function () {\n            console.log(\"Sign out completed!\");\n          }).catch(function (error) {\n            return console.log(error.message);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/milansheladiya/College Doc/Sem 3/react-native/Project/GrocerFresh/src/Firebase/auth.js"],"names":["app","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","auth","signUpHandler","email","password","console","log","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","signInHandler","isSignedInHandler","onAuthStateChanged","signOutHandler","signOut"],"mappings":";AAAA,SAAQA,GAAR;AACA,SACEC,OADF,EAEEC,8BAFF,EAGEC,0BAHF,QAIO,eAJP;AAMA,IAAMC,IAAI,GAAGH,OAAO,EAApB;AAGA,OAAO,IAAMI,aAAa,GAAI,SAAjBA,aAAiB,CAAOC,KAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkB,QAAlB,EAA6BC,QAA7B;AAD0B;AAAA,2CAGpBL,8BAA8B,CAACE,IAAD,EAAOE,KAAP,EAAcC,QAAd,CAA9B,CACLG,IADK,CACA,UAACC,cAAD,EAAoB;AACxB,gBAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACN,KAAjB;AACA,mBAAO,IAAP;AACD,WALK,EAMLO,KANK,CAMC,UAACC,KAAD,EAAW;AAChB,gBAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,gBAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAV,YAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAZ;AACA,mBAAO,KAAP;AACD,WAZK,CAHoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAoBP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACnBhB,0BAA0B,CAACC,IAAD,EAAOE,KAAP,EAAcC,QAAd,CAA1B,CACHG,IADG,CACE,UAACC,cAAD,EAAoB;AACxB,gBAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA8BG,IAAI,CAACN,KAAnC;AACD,WAJG,EAKHO,KALG,CAKG,UAACC,KAAD,EAAW;AAChB,gBAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,gBAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAV,YAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAZ;AACD,WAVG,CADmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAgBP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACvBhB,IAAI,CAACiB,kBAAL,CAAwB,UAAAT,IAAI,EAAI;AAClC,gBAAGA,IAAH,EAAS;AACL,qBAAO,IAAP;AACH,aAFD,MAGI;AACA,qBAAO,KAAP;AACH;AACJ,WAPK,CADuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAcP,OAAO,IAAMU,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACpBlB,IAAI,CAACmB,OAAL,GAAeb,IAAf,CAAoB,YAAM;AAC5BF,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,WAFK,EAEHI,KAFG,CAEG,UAAAC,KAAK;AAAA,mBAAIN,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACI,OAAlB,CAAJ;AAAA,WAFR,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import {app} from './config';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nconst auth = getAuth();\n\n// ######################################################  Signup Function  ######################################################\nexport const signUpHandler =  async (email,password) => {\n    console.log(email,\"  === \" , password);\n\n    await createUserWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n      const user = userCredential.user;\n      console.log(user.email);\n      return true;\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      return false;\n    });\n};\n\n\n// ###################################################### Login Functions  ######################################################\nexport const signInHandler = async() => {\n    await signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        console.log(\"Login With : \" , user.email);\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode);\n        console.log(errorMessage);\n      });\n  };\n\n\n// ######################################################  If already Logged in  ######################################################\nexport const isSignedInHandler = async () => {\n    await auth.onAuthStateChanged(user => {\n        if(user) {\n            return true;\n        }\n        else{\n            return false\n        }\n    })\n};\n\n\n// ######################################################  To do sign out  ######################################################\n\nexport const signOutHandler = async () => {\n    await auth.signOut().then(() => {\n        console.log(\"Sign out completed!\");\n    }).catch(error => console.log(error.message))\n}\n\n\n  "]},"metadata":{},"sourceType":"module"}