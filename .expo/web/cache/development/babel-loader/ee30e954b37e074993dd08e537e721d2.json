{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { readAllHandler } from \"../../Firebase/read\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\n\nvar NewProductScreen = function NewProductScreen(props) {\n  var _useState = useState(\"Modify Product by Category\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      pageTitle = _useState2[0],\n      setPageTitle = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstRender = _useState4[0],\n      setFirstRender = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      open = _useState6[0],\n      setOpen = _useState6[1];\n\n  var _useState7 = useState(\"Fruits\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var _useState9 = useState([{\n    label: \"Fruits\",\n    value: \"Fruits\"\n  }, {\n    label: \"bakeryFood\",\n    value: \"bakeryFood\"\n  }, {\n    label: \"dairy\",\n    value: \"dairy\"\n  }, {\n    label: \"frozenFood\",\n    value: \"frozenFood\"\n  }, {\n    label: \"meat\",\n    value: \"meat\"\n  }, {\n    label: \"vegetables\",\n    value: \"vegetables\"\n  }]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      items = _useState10[0],\n      setItems = _useState10[1];\n\n  var getCategoryHandler = function getCategoryHandler() {\n    var res;\n    return _regeneratorRuntime.async(function getCategoryHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(readAllHandler([\"grocery\"]));\n\n          case 2:\n            res = _context.sent;\n            res.forEach(function (doc) {\n              console.log(doc.id, \" => \", doc.data());\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      paddingTop: 60\n    }\n  }, React.createElement(View, {\n    style: styles.titleOuter\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"AdminHomeScreen\");\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-back\",\n    size: 30,\n    color: \"black\",\n    style: {\n      margin: 10,\n      padding: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.title\n  }, pageTitle, \" \")), React.createElement(View, null, React.createElement(Text, {\n    style: styles.inputfieldText\n  }, \" Category \"), React.createElement(View, {\n    style: styles.boxContainer\n  }, React.createElement(DropDownPicker, {\n    open: open,\n    value: value,\n    items: items,\n    setOpen: setOpen,\n    setValue: setValue,\n    setItems: setItems,\n    style: styles.categoryMenu,\n    textStyle: styles.categoryText,\n    containerStyle: styles.cetegoryContainer\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.taskButton,\n    onPress: function onPress() {\n      return props.navigation.navigate(\"AdminProductScreen\", {\n        category: value,\n        navigation: props.navigation\n      });\n    }\n  }, React.createElement(Text, {\n    style: styles.taskButtonText\n  }, \" GO \")));\n};\n\nvar styles = StyleSheet.create({\n  titleOuter: {\n    backgroundColor: \"#3B6978\",\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.7,\n    shadowRadius: 5,\n    marginBottom: 40,\n    flexDirection: \"row\"\n  },\n  title: {\n    textAlign: \"center\",\n    padding: 25,\n    fontSize: 20,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    color: \"#FAEEE7\"\n  },\n  inputfieldText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#14274E\",\n    textAlign: \"center\",\n    padding: 20\n  },\n  categoryMenu: {\n    width: 300,\n    height: 40,\n    backgroundColor: \"#fafafa\"\n  },\n  categoryText: {\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  cetegoryContainer: {\n    width: 300,\n    marginLeft: 10,\n    backgroundColor: \"#dfdfdf\"\n  },\n  boxContainer: {\n    alignItems: \"center\"\n  },\n  taskButton: {\n    width: 300,\n    alignSelf: \"center\",\n    borderRadius: 25,\n    backgroundColor: \"#206A5D\",\n    position: \"absolute\",\n    bottom: -500,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.7,\n    shadowRadius: 5\n  },\n  taskButtonText: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    textAlign: \"center\",\n    padding: 15,\n    color: \"white\"\n  }\n});\nexport default NewProductScreen;","map":{"version":3,"sources":["/Users/sahiththota/React-Node Works/ClassWork/GrocerFresh/src/screens/Admin/CategoryScreen.js"],"names":["React","useEffect","useState","readAllHandler","DropDownPicker","Icon","NewProductScreen","props","pageTitle","setPageTitle","firstRender","setFirstRender","open","setOpen","value","setValue","label","items","setItems","getCategoryHandler","res","forEach","doc","console","log","id","data","paddingTop","styles","titleOuter","navigation","navigate","margin","padding","title","inputfieldText","boxContainer","categoryMenu","categoryText","cetegoryContainer","taskButton","category","taskButtonText","StyleSheet","create","backgroundColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","marginBottom","flexDirection","textAlign","fontSize","fontStyle","fontWeight","color","marginLeft","alignItems","alignSelf","borderRadius","position","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\nimport { readAllHandler } from \"../../Firebase/read\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\n// Dropdown manu :  https://hossein-zare.github.io/react-native-dropdown-picker-website/docs/usage\n\nconst NewProductScreen = (props) => {\n  const [pageTitle, setPageTitle] = useState(\"Modify Product by Category\");\n  const [firstRender, setFirstRender] = useState(false);\n\n  // for dropdown menu\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"Fruits\");\n  const [items, setItems] = useState([\n    { label: \"Fruits\", value: \"Fruits\" },\n    { label: \"bakeryFood\", value: \"bakeryFood\" },\n    { label: \"dairy\", value: \"dairy\" },\n    { label: \"frozenFood\", value: \"frozenFood\" },\n    { label: \"meat\", value: \"meat\" },\n    { label: \"vegetables\", value: \"vegetables\" },\n  ]);\n\n  const getCategoryHandler = async () => {\n    const res = await readAllHandler([\"grocery\"]);\n    res.forEach((doc) => {\n      console.log(doc.id, \" => \", doc.data());\n    });\n  };\n\n  // useEffect(async () => {\n  //   // if(!firstRender)\n  //   {\n  //     await getCategoryHandler();\n  //     setFirstRender(true);\n  //   }\n  // },[]);\n\n  return (\n    <View style={{ paddingTop: 60 }}>\n      <View style={styles.titleOuter}>\n        <TouchableOpacity\n          onPress={() => props.navigation.navigate(\"AdminHomeScreen\")}\n        >\n          <Icon\n            name=\"arrow-back\"\n            size={30}\n            color={\"black\"}\n            style={{ margin: 10, padding: 11 }}\n          />\n        </TouchableOpacity>\n        <Text style={styles.title}>{pageTitle} </Text>\n      </View>\n\n      <View>\n        <Text style={styles.inputfieldText}> Category </Text>\n        <View style={styles.boxContainer}>\n          <DropDownPicker\n            open={open}\n            value={value}\n            items={items}\n            setOpen={setOpen}\n            setValue={setValue}\n            setItems={setItems}\n            style={styles.categoryMenu}\n            textStyle={styles.categoryText}\n            containerStyle={styles.cetegoryContainer}\n          />\n        </View>\n      </View>\n\n      <TouchableOpacity\n        style={styles.taskButton}\n        onPress={() =>\n          props.navigation.navigate(\"AdminProductScreen\", {\n            category: value,\n            navigation: props.navigation,\n          })\n        }\n      >\n        <Text style={styles.taskButtonText}> GO </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleOuter: {\n    backgroundColor: \"#3B6978\",\n    // margin: 20,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.7,\n    shadowRadius: 5,\n    // borderRadius:20,\n    marginBottom: 40,\n    flexDirection: \"row\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: 25,\n    fontSize: 20,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    color: \"#FAEEE7\",\n  },\n  inputfieldText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#14274E\",\n    textAlign: \"center\",\n    padding: 20,\n  },\n  categoryMenu: {\n    width: 300,\n    height: 40,\n    backgroundColor: \"#fafafa\",\n\n    //   marginLeft:10,\n  },\n  categoryText: {\n    textAlign: \"center\",\n    fontSize: 20,\n  },\n  cetegoryContainer: {\n    width: 300,\n    marginLeft: 10,\n    backgroundColor: \"#dfdfdf\",\n  },\n  boxContainer: {\n    alignItems: \"center\",\n  },\n  taskButton: {\n    width: 300,\n    alignSelf: \"center\",\n    borderRadius: 25,\n    backgroundColor: \"#206A5D\",\n    position: \"absolute\",\n    bottom: -500,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.7,\n    shadowRadius: 5,\n  },\n  taskButtonText: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    textAlign: \"center\",\n    padding: 15,\n    color: \"white\",\n  },\n});\n\nexport default NewProductScreen;\n"]},"metadata":{},"sourceType":"module"}